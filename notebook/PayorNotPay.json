{
	"name": "PayorNotPay",
	"properties": {
		"folder": {
			"name": "Yale"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "NotebookPool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "112g",
			"driverCores": 16,
			"executorMemory": "112g",
			"executorCores": 16,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "26cd1d5f-4964-43bc-a7f0-192cc3852107"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1",
				"state": {
					"141d3368-91f2-44e5-80c8-5886457c231f": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "none",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": "2",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " so its not stoppable. It is just what it is. Its just the energy existing.\"",
										"1": " ",
										"2": "0",
										"3": "0",
										"4": "0",
										"5": "0",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"1": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"2": "\"<font color=\"\"green\"\">Complete</font>\"",
										"3": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"4": "\"<font color=\"\"green\"\">Complete</font>\"",
										"5": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"6": " ",
										"7": " "
									},
									{
										"0": "1",
										"1": "1",
										"2": "1",
										"3": " ",
										"4": "Task ACH needs to be redone due to inconsistencies. Sent email to complete retest.",
										"5": "0",
										"6": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"7": "3"
									},
									{
										"0": "1",
										"1": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"2": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"3": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"4": "\"<font color=\"\"green\"\">Complete</font>\"",
										"5": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"6": " ",
										"7": "NA"
									},
									{
										"0": "1",
										"1": "1",
										"2": "1",
										"3": "1",
										"4": "1",
										"5": "1",
										"6": "0",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "11/16/19 23:50",
										"1": "1",
										"2": "1",
										"3": "1",
										"4": "1",
										"5": " ",
										"6": "0",
										"7": " "
									},
									{
										"0": "2",
										"1": "0",
										"2": "0",
										"3": "0",
										"4": "0",
										"5": "0",
										"6": " ",
										"7": "0"
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "3",
										"1": "3",
										"2": "4",
										"3": "4",
										"4": "3",
										"5": "9/21/19 15:55",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": "NA"
									},
									{
										"0": "4",
										"1": "3",
										"2": "4",
										"3": "5",
										"4": "4",
										"5": "4",
										"6": "1",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": "0",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "MFast Unusual Course  1. Do voices tell you to do things? - Yes  2. Sometimes I hear music coming from no where - Yes    (Consistent for mediums)    CbSASH Consistency:  1.\tThe voices are deep like thoughts (yes); Hearing voices is like thinking (No)   2. \tI hear more than one voice (Yes); I hear many voices (No)  3. I am comforted when I hear the voices (no); The voices I hear are comforting (Unsure)  4. \tI would be happy if I stopped hearing voices (Unsure); I would like the voices to stop (No)  5. \tThe voices are caused by someone else (no); Someone is making me hear voices (Unsure)",
										"1": "1",
										"2": "Follow up on CbSASH Consistency questions",
										"3": "\"Voices experienced - I think I also included that its more strong when I am doing healing work. I will hear more auditory experiences at that time. And that on the normal day to day its not necessarily always an outside of my head voice, that's its more internal on a day to day. If it is on the day to day its usually in the morning upon waking I might hear my name or a sentence and the voice its kind of like usually nondescript - sometimes it'll sound male or female, but its vague. But it doesn't have an accent or anything. Its not super specific. Its usually like a neutral tone of voice like casual conversation. Never more than one at once.     When I'm working on people - that is more like my guides or their guides. Have had the experience where its more than one person trying to talk to me from dead people, people wanting to tell the person on the table something. Have to tell them to get in line. Don't usually serve messages to people its not my line of work so when it does happen I'm very choosy.   Usually its more like guides. And its direct messages \"\"go here\"\" \"\"do this\"\" or show me a picture",
										"4": " etc.     I would say mostly its an indifferent response to hearing from them. If I don't want their help",
										"5": " I'm like no. ill just deny what they want me to do. Thanks but no thanks. If it feels higher than a guide and its more angelic",
										"6": "0",
										"7": "0"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": "0",
										"3": "1",
										"4": "1",
										"5": "1",
										"6": "4",
										"7": "0"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": "0",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "3",
										"1": "3",
										"2": "4",
										"3": "4",
										"4": "4",
										"5": "4",
										"6": " ",
										"7": "0"
									},
									{
										"0": "2",
										"1": "0",
										"2": "0",
										"3": "0",
										"4": "0",
										"5": "0",
										"6": " ",
										"7": "0"
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": "0",
										"3": "0",
										"4": "0",
										"5": "0",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "1",
										"1": "1",
										"2": "1",
										"3": "0",
										"4": "1",
										"5": "1",
										"6": "3",
										"7": "0"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": "0",
										"2": "0",
										"3": "0",
										"4": "0",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": "NA"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "5",
										"1": "5",
										"2": "5",
										"3": "5",
										"4": "5",
										"5": "5",
										"6": " ",
										"7": "0"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "1",
										"1": "1",
										"2": "0",
										"3": " ",
										"4": " ",
										"5": "5",
										"6": "5",
										"7": "0"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "1",
										"1": "2",
										"2": "2",
										"3": "1",
										"4": "2",
										"5": "2",
										"6": "1",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": "0",
										"4": " ",
										"5": "0",
										"6": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": "0",
										"3": "0",
										"4": "0",
										"5": "0",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": "NA"
									},
									{
										"0": "5",
										"1": "5",
										"2": " ",
										"3": "5",
										"4": "9/29/19 13:21",
										"5": "2",
										"6": "2",
										"7": "0"
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": "NA"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": "368  MFast Unusual  1. 1.\t On many occasions, I feel things crawling on me when there is nothing there  2. 2.\t Sometimes I hear music coming from no where          CbSASH Inconsistent    1. 1.\tI hear many voices;  I hear one voice only  2. 2.\tI can make out what the voices say; The voices always speak gibberish  3. 3.\tThe voices talk about the same few things all the time; The voices talk about many different topics  4. 4.\tThe voices talk about me; The voices talk about different things but not about me  5. 1.\tThe voices are always the same; The voices changed over time    SAID NO TO ALL CBSASH",
										"2": "1",
										"3": "1",
										"4": " ",
										"5": "Multiple different voices   Sometimes can make out what they are saying but not all the time.    No common subject - something that's happening at the time. content changes all the time.   Responding to the situation, like looking for a pantry light and a voice will guide to where it is.    Randomly guides the person.   There's nothing I could say that there's a subject.  Circumstantial.    All makes sense for psychic/medium",
										"6": " ",
										"7": "0"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": "0",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "3",
										"1": "2",
										"2": "1",
										"3": "1",
										"4": " ",
										"5": " ",
										"6": "0",
										"7": "0"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": "0",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "4",
										"1": "1",
										"2": "4",
										"3": "4",
										"4": "4",
										"5": "4",
										"6": "MFast Extreme Sx:  1. Lately my eyesight is so good that I think I have special powers  2. Often, I get the strange feeling that I am from another planet     MFast Rare Combo  1. Some days I have major mood swings where for a while I feel great and then I feel depressed  2. Some nights I have nightmares so bad it scares me  3.  Sometimes I am convinced that I Have more than one personality    MFast Unusual Course  1. On many occasions, I feel things crawling on me when there is nothing there (normal for mediums)  2.  Sometimes I hear music coming from no where (normal for mediums)    CbSASH Inconsistent Responses:  1. \tI hear voices only at home;  I hear voices in any place - No to both  2. I hear many voices;  I hear one voice only - No to both  3. The voices talk about the same few things all the time; The voices talk about many different topics - No to both  4. The voices talk about me; The voices talk about different things but not about me - No to both  5. 1.\tThe voices I hear are not real voices; The voices I hear are real - Yes to both",
										"7": "0"
									},
									{
										"0": "0",
										"1": "0",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "1",
										"1": "1",
										"2": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"3": "\"<font color=\"\"green\"\">Complete</font>\"",
										"4": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"5": "\"<font color=\"\"green\"\">Complete</font>\"",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": "0",
										"3": "0",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": "0",
										"3": "0",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "1",
										"1": "1",
										"2": " ",
										"3": "none",
										"4": "0",
										"5": " ",
										"6": " ",
										"7": "0"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": "0",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": "0",
										"3": "0",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": "NA"
									},
									{
										"0": " No)  4.\tI know why I hear voices; I don't know why the voices occur   (No",
										"1": " No)\"",
										"2": "1",
										"3": "1",
										"4": "Need to follow up on all the inconsistencies throughout the CbSASH",
										"5": "Doesn't hear voices actively. has only heard them a few times in his life randomly years ago so the AH questions generated incorrectly.",
										"6": " ",
										"7": "0"
									},
									{
										"0": " ",
										"1": "2",
										"2": " ",
										"3": "0",
										"4": "0",
										"5": "0",
										"6": " ",
										"7": "0"
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": "NA"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": "0",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": "0"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": "NA"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": "0",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": "2",
										"3": " ",
										"4": "0",
										"5": "0",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": "NA"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": "2",
										"4": " ",
										"5": "0",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "4",
										"1": "4",
										"2": " ",
										"3": "5",
										"4": "10/19/19 18:26",
										"5": "2",
										"6": "0",
										"7": "0"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"1": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"2": "\"<font color=\"\"green\"\">Complete</font>\"",
										"3": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"4": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"5": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "1",
										"2": "1",
										"3": "1",
										"4": "1",
										"5": "0",
										"6": " ",
										"7": " "
									},
									{
										"0": "4",
										"1": "2",
										"2": "1",
										"3": "1",
										"4": "1",
										"5": "1",
										"6": "0",
										"7": "0"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": "0",
										"3": "0",
										"4": "0",
										"5": " ",
										"6": "0",
										"7": "NA"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "5",
										"1": "5",
										"2": "4",
										"3": "5",
										"4": "5",
										"5": "4",
										"6": "MFast Unusual Course  1.  On many occasions, I feel things crawling on me when there is nothing there  2.  Sometimes I hear music coming from no where  Normal for mediums      CbSash Inconsistnet   I hear many voices;  I hear one voice only  (Yes, Yes)    I can make out what the voices say; The voices always speak gibberish  (No, No)    The voices talk about me; The voices talk about different things but not about me  (Unsure, Unsure)    The voices I hear are not real voices; The voices I hear are real  (Unsure, Unsure)    I know why I hear voices; I don't know why the voices occur  (Unsure, Unsure)",
										"7": "0"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": "0",
										"3": "0",
										"4": "0",
										"5": "0",
										"6": " ",
										"7": "0"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " being connecting to Jesus or universal energy",
										"1": " I let myself do that.  I am not helpless over it happening to me. I can regulate it. I understand why it's happening",
										"2": " when it's happening. And it's my own doing/causing it to happen.     When I don't pay attn to my feelings and my contemplation meditation to do during the day.     I can induce emotions based on radiating feelings of love",
										"3": " gratitude",
										"4": " faith. That helps me tremendously and I can tell when my brain switches. It's not that I'm depressed and don't know what to do and that its sudden",
										"5": " its more or less when I'm too busy and don't pay attention to my feelings and peace and harmony",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": "0",
										"3": "0",
										"4": "0",
										"5": "0",
										"6": " ",
										"7": "0"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": "0",
										"3": "0",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": "0",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "1",
										"1": "1",
										"2": "1",
										"3": "1",
										"4": "0",
										"5": "1",
										"6": "0",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": "0",
										"2": "0",
										"3": "0",
										"4": "0",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": "0",
										"2": "0",
										"3": "0",
										"4": "0",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "1",
										"1": "1",
										"2": "1",
										"3": "1",
										"4": "1",
										"5": "1",
										"6": "1",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "3",
										"1": "4",
										"2": "3",
										"3": "3",
										"4": "1",
										"5": "3",
										"6": "1",
										"7": "0"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "1",
										"1": "1",
										"2": "2",
										"3": "1",
										"4": "1",
										"5": "1",
										"6": "1",
										"7": "  blocking my walk to school.     I have learned that the voices are often different guides of mine. I have always been able to hear other people's voices  too.  But it was so distracting as a kid that I also learned to tune them out. I now tune in to other people's guides and ancestors for psychic and mediumistic readings. I hear very clearly from folks who've died and want to talk to their loved ones here in the physical world. So I guess the last time I hear from other voices was yesterday during a reading for a client.     Hope that helps. Basically"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "1",
										"1": " ",
										"2": " ",
										"3": "4",
										"4": "5",
										"5": "5",
										"6": "5",
										"7": "0"
									},
									{
										"0": "1",
										"1": "1",
										"2": "1",
										"3": "1",
										"4": "2",
										"5": "1",
										"6": "1",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": "0",
										"3": "0",
										"4": "0",
										"5": "0",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "2",
										"1": "3",
										"2": "3",
										"3": "3",
										"4": "4",
										"5": "4",
										"6": "1",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": "0",
										"3": "0",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": "0",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": "0",
										"2": "0",
										"3": "0",
										"4": "0",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "4",
										"1": "2",
										"2": "1",
										"3": "1",
										"4": "1",
										"5": "1",
										"6": "0",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": "0",
										"3": "0",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "1",
										"1": "need to follow up on all cbash",
										"2": "\"responses make sense because not all experiences are voices from spirits, but from experiencing others' thoughts:    Sometimes they are spirits, sometimes they are people's thoughts. Sometimes just stuff that I'm about to hear on the radio.   Spirits are the quietest - least connected to an emotion.   The loudest is people who are thinking about me and have some strong emotion attached to it. It's not cool. Its distracting. Sometimes just get the feeling.     When I had my nervous breakdown, one thing that was disconcerting to me - around the time when I was growing up, there were only 3 TV channels, no internet, not as much stuff being transmitted. There was a woman and her daughter got kidnapped hiking in northern California, was on news someone missing but it was something - I kept seeing this man and 2 woman and they were really scared and id see them before bed and it would frighten me and they found them and caught him and it was on the news and I realized that was what I was seeing. The things that come from the computer - like if I'm logging on to facebook, like things on my feed - ill find myself randomly thinking about, some news item about something - all of those things, those are the clearest and the dead - and then getting into the shadow-ey point between mental illness and psychic things. I talk to things that I don't know if they were ever human. Difference between me and a crazy person is that I'm able to live in more than one reality at one time and I have a firm grasp in both realities.    My strongest intuition will be the quietest thing with no emotion attached to it. Can be hard to identify. That's at the bottom. And later I'll remember that thing and say that's what I should have listened to.     These experiences happen anywhere, if I'm busy or if a lot of people are around, its not that they're not happening, its only half tuned in.   The population is so low here (MO) rather than CA and it thought I was going crazy so when I first came back to MO . the clairaudient thing Is confusing, I'm hearing other peoples thought sand other people will think \"\"I don't like her\"\" like if I meet someone and shake their hand",
										"3": " I'll hear \"\"I don't like her\"\" or from men - I don't think I'm a raging beauty",
										"4": " I've had men all over me since I was a raging child",
										"5": " I didn't want to be psychic as a kid I didn't want to be like my mom",
										"6": " the spirit will show up. 3-4 times a year they'll show up. There's also the guy who committed suicide they knew in HS. So ill talk back to them. you have to validate the story for them. when they're talking to me all the time outside of a reading",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": "0",
										"2": "0",
										"3": "0",
										"4": "0",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": "2",
										"2": "3",
										"3": "2",
										"4": "2",
										"5": "3",
										"6": "3",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": "0",
										"2": "0",
										"3": "0",
										"4": "0",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "1",
										"1": "1",
										"2": "1",
										"3": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"4": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"5": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"6": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": "0",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": "2",
										"6": " ",
										"7": "0"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " chat about how im feeling",
										"1": " does anyone really know? Does anyone really know why things happen? It kind of muddles into why am I put here",
										"2": " etc.     How would I feel if the voices stopped? I would be worried because it seems so normal to me. And that ive had it since I can remember.   I would feel a little bit worried.     Definitely hear voices at work. Sometimes at home. When im out and about. And I have to do a lot of thinking and what im doing or where im going. What im buying or what im trying to achieve.       Come and go as they please     Honestly dont know if anything makes them stop beau ei never really tried.     No harm self    Not bothered by them     Can happen at any time.       I like to think I can talk to my cat. And he talks back to me. I do sometimes ill hear like a dog and the dogs not there. Ill be at work. Were not allowed dogs",
										"3": " guide dogs. Or birds when im not where near birds.       The voices talking to the radio - we have our own radio station at work",
										"4": " its not a proper radio",
										"5": " tune then special offers",
										"6": " ill get called quite alot",
										"7": "0"
									},
									{
										"0": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"1": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"2": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"3": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"4": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"5": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "1/2/20 16:03",
										"1": "1",
										"2": "1",
										"3": "1",
										"4": "1",
										"5": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"6": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": "2",
										"2": " ",
										"3": "0",
										"4": "0",
										"5": "0",
										"6": " ",
										"7": "0"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "1",
										"1": "1",
										"2": "1",
										"3": " ",
										"4": "MFsat Extreme  1. 1.\tI feel depressed most of the time  2. 1.\tLately my eyesight is so good that I think I have special powers  3. 2.\tWhen I hear voices, I hear them from either my right or my left ear, but rarely from both at the same time.  4. 3.\tOften, I get the strange feeling that I am from another planet       MFast Rare  1. 1.\tSome days I have major mood swings where for a while I feel great and then I feel depressed  2. 2.\tSome nights I have nightmares so bad it scares me  3. Sometimes I am convinced that I Have more than one personality  When I hear voices my hands begin to sweat    6. When I hear voices, I often develop fears of leaving my house or room     MFast Unusual  1. 1.\tI experience hallucinations that last continually for days  2. 2.\tWhenever I see people who are not really there, they are always in black or white  3. 1.\t Sometimes I hear music coming from no where",
										"5": "1",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "MFast Unusual  1. 1.\tDo voices tell you to do things?    1. 1.\tSometimes I hear music coming from no where      CbSASH Inconsistent    1. I hear voices only at home;  I hear voices in any place (NO TO BOTH)  2. \tI hear many voices;  I hear one voice only (NO TO BOTH)  3. 1.\tThe voices talk about the same few things all the time; The voices talk about many different topics (YES TO BOTH)  4. 1.\tI hear the voices constantly all the time ; The voices come and go  5. 1.\tThere are things that make the voices stop; Nothing makes the voices stop  6. 2.\tThe voices order me to hurt myself; The voices do not tell me to hurt myself  7. 3.\tThe voices I hear are not real voices; The voices I hear are real (NO TO ALL ABOVE)",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": "2",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": "NA"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": "Redid the YL control task - ran the quality check and they did the task correctly - ok to pay",
										"2": "2",
										"3": "2/29/20 12:59",
										"4": "1",
										"5": "1",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "\"Framework for experience: happens in a bunch of different ways.  Have a spiritual team I work with. When I work with other people, I sometimes hear ... like last summer I worked at a shamanic workshop, its immersive sometimes. I was immersed in someone else meditative state. I go where they go. I tap into it. Its not overwhelming. I control it by having sessions  ... I don't feel like I am constantly on the telephone.     - Content: depends on ... typically related to someone has asked or if its something I'm doing it would be different solutions or even a song, and im like \"\"why\"\" please stop that song. All sorts of messages. Hard to define it.   - I live in a 100 year old dairy barn. On this old farm. Its a transitional place. Every generation has lived there. I've lived here from 1-5. This is where I work too. I never feel removed from it. I feel like ive struggled with agoraphobia ive been ike \"\"hey what if I dont like going places because its loud because the volume is turned up.\"\" I would say that - somewhere where I work constantly is more focused and directed. Outside of those environments its more chaotic and haywire. Its not that im hearing voices",
										"1": " today is mars day. I have a mars anointing oil. There's different activities where things are more present when I tap into that energy.   - Sometimes if its like a discarnate energy",
										"2": " it'll be like \"\"miss\"\" or. \"\"miss Lacey\"\" or \"\"miss burgeon\"\" and idk if its to job a convo",
										"3": " but it irritates me and there have been a few. I don't know them. They dont know me. But its a polite endearment.     Visual experiences happen more internally - in my minds eye. In my field of vision. Or when I meditate. I was afraid of the dark when I was little and id see aurora borealis moving tings when I would pull the cover over my head. Never thought about it again until my therapist was like hey try meditating and I tried and I started seeing these like mandala patterns. It bothered me at first but not anymore. Then I realized ok that's part of what happens in trance.\"",
										"4": "all makes sense for psychic/medium",
										"5": "2",
										"6": " ",
										"7": "0"
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": "NA"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": "NA"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": "0",
										"3": "0",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": "1",
										"2": "3",
										"3": "3",
										"4": "4",
										"5": "4",
										"6": "4",
										"7": "0"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "1",
										"1": "1",
										"2": "1",
										"3": "1",
										"4": "1",
										"5": "1",
										"6": "1",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": "0",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "1",
										"1": "0",
										"2": "0",
										"3": "0",
										"4": "0",
										"5": "1",
										"6": "0",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "redid auditory task - all set",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": "2",
										"5": "4/16/20 12:36",
										"6": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": "0",
										"2": "0",
										"3": "0",
										"4": "4/16/20 18:07",
										"5": "iphone ear buds",
										"6": " ",
										"7": "0"
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": "NA"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": "0",
										"3": "0",
										"4": "0",
										"5": "1",
										"6": "0",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "1",
										"1": "Monthly voices -     Psychic/Medium  Grew up in house for 15 years and its really haunted. We have people who won't come in.     Spirits talking. Usually external but occasionally internal.    Hear voices outside of the home as well, but only when im in places that I purposely go for haunted things - like paranormal investigations.     In the house - usually things like names, hi, things to make themselves known. But I do know that occasionally when I hear them internally in my head something I don't think I put in there, its usually in the back left side of my head. Just behind my left ear and that's when they'll say more about like who they are - time frames, etc.    Usually if im preoccupied or not interested in the convo, ill be like I don't want to talk now and that's how I can get them to shut down.",
										"2": "2",
										"3": " ",
										"4": "0",
										"5": "0",
										"6": " ",
										"7": " "
									},
									{
										"0": "2",
										"1": "1",
										"2": "1",
										"3": "1",
										"4": " ",
										"5": "COPE1112            MFast Rare  Some days I have major mood swings where for a while I feel great and then I feel  depressed  2. Some nights I have nightmares so bad it scares me  When I hear voices, I often develop fears of leaving my house or room    CbSASH CONSISTENT  The voices are deep like thoughts; Hearing voices is like thinking (yes, No)  The voices have conversations; The voices consist of conversations (Unsure, Yes)‰Û¬I cannot make out the sex of the voices; I can't tell if the voices are male or female (Yes, No)  10. The voices refer to me by name; The voices call my name (Yes, No)  The voices are my own thoughts; The voices say what I am thinking (Unsure, No)        needs to redo visual task    need to fu on cbsash          How often do you have voice    Daily occurrence - when I answered the questions it sounded like we were asking about external experience -     Tried to answer about externally.    External: those happen pretty rarely these days. But when it happens I can tell its external itll be like a feeling of a company of a presence of loved ones or im in a place where I know there is a haunting or a paranormal activity and where ive heard voices the most. I worked in an old family building at one time and late at night id hear a lot of things like footsteps up the stairs, etc.   Echos or sounds like an echo of a person who was there in the past.    In June 2010 - had a psychotic break. I also had a mixed back with the internal and external voices. Didnt know who it was coming from. Didnt seem like spirits because it was malevolent.   Couldn't tell what was my mind or me.    Daily occurrences - can differentiate between the two between internal and something else that im experiencing internally. When   Used to have past hypnogogic hallucinations. Conversations but not about me.   Couldn't tell if these are voices in my head or if im crazy or what.    Went through therapy - started taking different meds. More able to say ok these are my thoughts, this is what my inner voice sounds like - and now, if I have intrusive thoughts pop in and its a voice pop in - its usually like guidance or commentary on something that im thinking or something that ive done. totally out of the blue. Sometimes voice to get attention - like mom who passed away or my grandmother, and what might be angels talking.     Welcome experience these days.     Survey answers were more about external experiences rather than internal - which happen more often.",
										"6": "1",
										"7": "0"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "1",
										"1": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"2": "\"<font color=\"\"green\"\">Complete</font>\"",
										"3": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"4": "\"<font color=\"\"green\"\">Complete</font>\"",
										"5": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"6": "",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"1": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"2": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"3": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"4": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"5": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": "0",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "\"<font color=\"\"green\"\">Complete</font>\"",
										"1": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"2": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"3": "\"<font color=\"\"green\"\">Complete</font>\"",
										"4": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"5": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"6": "H4sIAAAAAAAAA7WWa2/bNhSG/4qhocMGODTvklwERTojTbA1XRI3CTIMAi3RNhNZcqmL4wT57zvyTRbqtUaCEPpgHh6SD1+9PNaTo5PQzqe5joKJzlWkcuV0na/0OIs+Xd3fEP9+lFzPZ9Or8vY4Pz4tZe+s97F/rnqD8PxmVD6e31yf/Jknd7Iz68X9S3v2qRdZG4tZXsjigSR3R49F3H+MOf14dHjotJ1cZfdnaqJhF1VEJk/tPPhWqNgM5yYZBdVwIFd5V9pmJk0glSCMMESXfP88OYWNne7Tc9upqOGXE6vBXRaU9QwfkcWU5cCgMHFU5Q1jVaYWEqY2jYowr7LbTphOJiaHKB5gKojrDwkfRpSGIfOFx2gUqsGQCOz7oYw4jrADW8dpqPLlbuM8n2bdTmeazoAAtkRWZ1rZcIzmKtZIR0XnaHXc881p+3BG2fml88FEhy+Q/B09/rno71gPnl+zwpZ6HoBsh2tWq+FU0x2gy9ys8yE7vBi43JyUYtgHkYpM26ORTiqdPqePJo5VRyDc+u2zCk2Sp9n4fes0yXXcgkDry2XrpkUwIvR9y5ZdVyL8e+uTDu/TDsUEw0Nax8bqYfrQqQZhg2ms8mFqJ9X6KlwstXiByahQo8oxOjn4eukslY+3A7mZ6Ns0qUJHE21NqDp/mYlajTzCyJfhMNNAzjBuO1lotU6CmYnysdMl1KtjY21GY8jzVnlpHH+XV8XWeVLQtjMzSZTOApMk2l5vJ28PnKxmuNXKkS5NqP82Dzq+qEwEE8BRmU4iXZnzNMlyu3Rn5qzjQT6fVicMVVKqDF0ugOtRE1X+hT680SnMq1L/SJPcJIWGaJUUBQu3bhKW8gS2gChn3F/3VxicCY4oXUWzcTqDGMcQW4Ugz+n6UnI4UGFXl0FQ4SNvlbG+WL50yTKU5WoyBQiKKT7A8gCTPqVd4XapQFyS2zVUNjN5WAlJsEsR4c/tp1qfi/oEYWqtDmELEExvuhe1BqQpSdWtYbnvISzxuhH2f0JlAFVpv1yeBCVBM1U6DW2IR7BAPt9Wh3gSv5ydNdlZg10IikDETeP7sbOd7FRIAezeNjuVFHtvpDvFyBf+ppHX6M4YFS7CDd0Zk+7L2X+ou+tx5LENuhR7606/Z+fgboaI3Gbn8E/zcnbaZKcNdgLXCXnuBt7d0zR0p/DcEyA8aZQDDvXg5/BDFWf7uKZJTynnSHq15fe/rjukF9LFHmINeuH5gr2N5SUUU1k73n2V5SXcHYrYNrqEOuy+jeN9CY6vVaf+axzvMgnoDdVdLsXL0X+oOoGijPy6wss9Db/bMh5x4f40K41HPZ++UaWRDIm6wvM9LbO7wnvgGBfxRoX3sfTJ87/t6mv4DmaeVt8QjC+YYLFo0SeE+c7zf//PdxorDAAA",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"1": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"2": "\"<font color=\"\"green\"\">Complete</font>\"",
										"3": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"4": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"5": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "\"<font color=\"\"green\"\">Complete</font>\"",
										"1": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"2": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"3": "\"<font color=\"\"green\"\">Complete</font>\"",
										"4": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"5": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"6": "H4sIAAAAAAAAA7VX+2/aSBD+V5BPPbUqXe/bu5yiiiNN0yZN2rzT08ky9gJujE39gKZR/vebxXYANdJFjUD8gGdmZ+b75rHmzjFpmN/OShP5U1MGUVAGTs85p3tF9P7i5oq8TvKLcf9sNx5EYTH49H2/f/45GNPjn0d9r/y2+HgdH7hX6d670/PhOzed7B+ry/GZOSoGhxeveXXAjoaHo73do4V7Pviys+N0nTIobo6CqYEoQRXFZZbf+t+rIIlHt3E69q3al43dhcmLOEvBlCCMMEjr/P65c6o8cXp3913HZg2/nCQYfiv8+eqERmR5pFYMqziJrN0oCeZZDgazPIuqsLTWXSfMptO4BCkeYiqIp0eEjyJKw5BpoRiNwmA4IgJrHcqI4wg7EDrJwqCso03Kclb0XHeWLSADCIlyU5ggDyfoNkgMMlHl9hu4Xx7QngFG6f7hvo2jnRXlL+jf/0/6C7rX0g4/N4kHB+vUgx7If8F24ftnUeVzc+sDfTttzrkBdLNHEq5tC/dtsROMzbv55fXJ2QWQVRUm749Navn6lP2MkyRwBcKdl1eE/NUZ5MenncB6krxDqPII0lCJV53+bJaYSzM8iEtXMA8x2Xl5sH/26bDbSeIb03lvwpvsVWcwybOpcZUtOcecI0K9zmkwCvK4OQYpzJKgHGX5FDI4jNPqRxtwWe90XEG+oDLpm/NTpy5Usi4o46n5mqVW1J+aPA4D98gs/Ossv2m0P0F7PBoVBkBSjrtOEebGpP4ijsqJ0yPQIw+yiYnHE7BTgi1lWZL8YmdlrZ1HwN8iTqNs4cdpavLLdeN1xX57gnHofTOPQ/M5/mGSE9t3Tg8jpZcfTxKhCKcEurIwaWRsg39IizKvO7xwWrlf3s4s7DBI50GBTpcIVto4sjMAz9ANMzhnTQdZWgLHBqTWKPKXHf9gUPPl51VqEVCJGOXLpJTGwmu1TVJEMIy0RxtxMckWVqgwElI3QjB1ekwqAYY1PMUUBk9RlTfzRgkWiBO8rl2ebeeYSU2Rks1xzT1ZGxRlMJ1B9hRT/AaLN1idEdEjuEckUop8bdEUi7gMoSQcM1AQcd+9WxF7soIeZnluQggITJuHx5MVeWSTS/u4guFRhiBAnSVmFsXjDBeQlC1a7Z74c4oWwdzZZJFgqRBRap1GAquMINpUBGL8NhC6CYRuAoEgirI6iJaeehoQ+jgQKARDHpMbQLSEkgvRhNDediqioesEo03fCMyeUxEqJRXI03QdCIVZJQ8zAjG2VBEpESyFJgjR+jkVYVxSjDzMNyZUMAXbmDQFUXQ7FVECJl00i4B6ij+5IuRXINz2KHSqtw6EMwoxqOJtDLmdkkipEVDWTCJ9IhD6KBDoTMyRFBtA4PXE4wiuzDbEb+NgmzjYBg7ONOK63loK7rwnAmGPAwE+4BrjG1tLKA7XBGuAqG3NCLQVIk3/QgZ2Tn+/IlJwphDlYh2IFEoLeGNpgHC9nRnhsFGkV28t5SnvWTMCfjC1jboOxGOMQGu1+8TbEhAmFBK8BaK9p6/fR4AozJi9XzeAKCzhrmr3iVL3/3btP4Fv4OWDffdhfJkfOI6Wz4Rw5dz/B/4f6bEnDQAA",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "1",
										"1": "1",
										"2": "1",
										"3": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"4": "\"<font color=\"\"green\"\">Complete</font>\"",
										"5": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"6": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "\"<font color=\"\"green\"\">Complete</font>\"",
										"1": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"2": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"3": "\"<font color=\"\"green\"\">Complete</font>\"",
										"4": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"5": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"6": "H4sIAAAAAAAAA7WW+0/bSBDH/5XIJ06tCJt9r50KVRTKuxxvEKdTtNgbYnBs40dSQPzvnbUdkqiUQyAs/2DPznrm853ZXT84Jvazu7QwQW9oCh3oQjtd54Su58HG6c058Tb3b062b2/Nof4+DA8WBwOxNQr9RUOOVLnd2TtdXGfn5YlKF1e5f7/fObleXRtuk6Pz+7XdDbGTrdLt9DRm3+IBvlpedtpOofObPT00EEWXQVgk2V3vttRR2L8L46ueHe7Jxu/UZHmYxOBKEEYYrHV+/z44ZRY53YfHtmOzhicn0pfXeW80neEhUk2pBy7LMAqsXz/SoyQDhzRLgtIvrHfb8ZPhMCzAii8xFUR5fcL7AaW+zzzhMhr4+rJPBPY8XwYcB9iB0FHi66KONiiKNO92OmkyhgwgJMpMbnTmD9CdjgwyQdlZaXAPnmiPgVF2/up8DYPlP0q+QL81osNTLfsCXd87hbdGeniqxAfzS/IvsDW4/87LbGTueiDg8iTrzABf+kzKtW/e+Zovr/GL44N41U19kKvMTbZyZWKr2I/kPowi3REItz6dhXGQjPPW3nGLQMW+tMAg+ZfWT8k/t1bSNDJn5nInLDqCKcRk69PO5vGP3XYrCm9Ma8P4N8nn1uogS4am4zKoOSeYIUlaR7qvs7CZBQmkkS76STaE+BCB0arO8VWpr2xj5dHS0ZZTFyiyBhMvnRzZpgqH5iKJrel7mSWp6exel5fRtY51M3oPo//0+7kBtCVCcdvJ/cyYuDcOg2LgdInEU9vAhFcDcPQaWxJFv/lZ28RPMdZ2xpVEvTCOTXY26zw7sDmZIRQ0vYHim/3wp4kObcPBBOi+3MSBsY28FedFVndy7kzsveIutZi+jkc6R0dVwtPRMLC9Du9Q8xTmWdfVJC7CuDRgtU5Br+rsJ4dan15WgpVxKIsQuLqoonwy2ORUjWMuG3M+SMbWyCRiwmuM4AogWLkUucyrL1cQwC2zZlkpxiXiLp4ZrKZOVqudzZFU9bjCkzzyQg9TyJ1iipewXMLqmMgull0CzYTxxYQlH4eFb/WnUmDkYvnYfpjqejgl95MsMz5EBKHN0+vhVDsyL6V9nWJwJZAnakZJGdx/UjiHtGzR6u+T3oigsR45czIST0qBlJCzOlJMOEGqUQoiqP9F6esofw0LnWOhVLpQEl5V3u6N4j0sVBHJkOuRORaPM4qYEk8xPqYsVAjEMKkVwy4R7ntQmOScI8XcWRQmFYZtsGlvCPIxJIxQBP1fR6FCcf4eEs4UlQjWziwJhxUNJ2qzTiGI+CAUpZCyqsGlBGVEvQdFECwUEpLNogjCGVSe4UmQt6OweRQ231+wTIWoUTwu6GtR2PMoLod+dfk8iqsoQfVirIJ8EAn2kGsPKbseGX1ldz3PIYWCQ5zQuWNACg92esh/EuLNHPSlzYtjaC5MarGgh9krSeizJIrCkQR9NEcCR7xnj76mIh77KBIOe1ddEQ9+V8mrQejvIK5NF2HBZ0Fc7NoYsgEhb9+6XmwtkAv2/3otQou9urOew1CwhyPK5/YtF2wCESYmER7/a9tf/2v4zJb9CWK8Sg++HFTvhEjPefwFz3oh7BgNAAA=",
										"7": " "
									},
									{
										"0": "\"<font color=\"\"green\"\">Complete</font>\"",
										"1": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"2": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"3": "\"<font color=\"\"green\"\">Complete</font>\"",
										"4": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"5": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"6": "H4sIAAAAAAAAA7VWbU/bSBD+K5FPPbVq2Oz7CxWqOHrQlpZrgZYep5Pl2BticGzXL0kD6n+/2dgm+BrdoSKsfIhnZzzzPPPM7t54Ng2LZV7ZyJ/ZKoiCKvC2vU90v4wOPl99IaO9owN2Wp4dH8eXcczHX+v4/Dn5tM8O5GF0vTc7+vL+y+Jk8mo5/nqYp6908fFbIoPk6DBLTi7fTq8LNik/1JE6n/DFzo439KqgvDoKZhayBHUUV1mx9L/WQRJPlnF64btlX7Z+n21RxlkKrgRhhMHa1PfXjVcXibd9833ouarhn5cE48vSn68jDCKrkGZhXMdJ5PwmSTDPCnDIiyyqw8p5D70wm83iCqx4jKkgykwIn0SUhiEzQjMahcF4QgQ2JpQRxxH2IHWShUHVZJtWVV5uj0Z5toAKICUqbGmDIpyiZZBYZKN6tNvC/XiL9hQwytEvo5dxtLOm/And30D6E/rbT9L+hL2C369lXczt0gfidrpqCwu48g2lNr7l6GW5U+2+lW+1+PPjG6CpLm2xe2FTx9T77DpOkmAkEB48PYvTKFuUg6PTAYFOvRiAQfIXg2+SPxvs5nliz+z4MK5GginE5ODp4evT9++GgyS+soMDG15lzwZ70yKb2ZFm0GtOMEOSDE6CSVDEbRQUkCdBNcmKGeSHDIyu+pte1MGFE1SZbJ24Ml1jEmew6danEyemeGbPs9SZfq+LLLejd5f1OLkM0qBdvYbVPyaT0gK0LULx0CvDwtrUX8RRNfW2icRr29TGF1NwNK0tS5If/Jyt81OMDb3FiiI/TlNbnN11vrvwuosQCsRu53FoP8TfbHLshAYBoLrSppF1An6TllXRKLj0OrtfLXMHMwzSeVCik1XB69U4chqHd+h5DnHOdS9LqzitLVidU+SvFH3r0PDjF3XqAHOkDTfwaEGIEt1iW5MhHAlJWms5zRZgYwRR2prAD1AoQpEWpnkkkxqw1kU7S0oTJFlvcRXajShEc6RYU4TUrM1WVsEsh7oppngLiy2GT7HeZnIb0gstzzsc5SKuQse9khwxBozerCk9XoMOs6KwIeSbBElpb9+P17zRPo3Mu4tCEJiLBqOGWh1Tm8ktoSrXr+bz1J8TtAjmXo9CrSQFXs1dEg1VCknBbzP8LxAQy0Yc7L9wUCqRIaRthhGY3g8I8+f0RyBEUsOQue1pIwcpKEZadR038qehkD4U0oPCqEKYyUY3Bqt7IiEbW0KZEBop1UNCmdYCacK7HI+EREqNoP4VXwyrh+BgWBuMKFN3cTDiwDFsugyPAwPOWWQU7IHwUMzM/YFskBbTQrlJ7w0JMwAPJke0OfgjAeEGSb1SlsFUYfKQjnBJMEVG95TFJQwJkop3OX4ayL92LdofESyRls0kEkoxYffetja0RDApFVK4t/kL6LM7JEyX5HH2LY4NUrqhi2BJGL/3vrWhJxIbTRHvaQu+aSii6jbH47REUY6IWukXYGiqH3KQwHFp4CbFRQ8IdAEmh4gux+N0hIGqteTtwQ5X7IccJEoSLhA1PSBwonONSHexMPT730N3zb+Ez7xxFx/GVwXCl6PVO9xg4CL/D9FJ8CIEDQAA",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "\"<font color=\"\"green\"\">Complete</font>\"",
										"1": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"2": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"3": "\"<font color=\"\"green\"\">Complete</font>\"",
										"4": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"5": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"6": "H4sIAAAAAAAAA7VWbW/bNhD+K4aGDi3m0Dy+iimCIuvSxH1bm6Tp2mEwaImO5ciSqhc7bpD/vpMl19WWFVmCCP5gHo+6e56756grzyVBvspKF47mrrShLa23631gL4rw8OziDzCZPf40+/T6AI4uZZEMD2blxRBOZofvZtlEfrqMDg/ChZuzX1ZTGB7LefLyQnyV4YF6OX55XJ7ZS/t8vOLJ2emr4fnentf3SltcvLVzh1FsFUZlmq9GXyobR5NVlJyP6u2Rav3OXF5EaYKuQCihaG3y+/PKq/LY27267nt11vjPi+14VowW2xOGwPpIszGuojis/SaxXaQ5OmR5GlZBWXv3vSCdz6MSrXRMmQRtJiAmIWNBwI30OQsDO56ApMYEKhQ0pB6GjtPAlk20aVlmxe5gkKVLzABDktwVzubBlKxs7IgLq8F+C/f9N7SniFENfho8i8K9/0/5I/brLUh/xH/D389FlS/caoS07W1yzR2iym5ItPEtBs+Kvf3379jJi+QLmyFJVeHy/XOX1Dy9Sb9GcWwHktDe449REqbLovf2tAdYp6c9NCjxtHepxJPefpbF7qMbv4rKgeSacNV7/Oro9M3rfi+OLlzv0AUX6ZPe82mezt3A51hpAZQTBb0TO7F51J7CBLLYlpM0n2N8jMDZurrJeWXP63Yq4p2TodeUJa4NLtn5cFK3UjR3n9OkNh1UeZq5wetZNY5nNrHt7lfc/X0yKRxC2wFG+14R5M4lo2UUllNvFxTd2qYuOp+io2ltaRz/y6+2bfw0531vuaZoFCWJyz9+7/z9xtHmhNTY6m4RBe5ddOni47rN8AD2XOGS0NXtO0yKMm/6t/A29lG5ymqYgU0WtiAn64S3u1FYdziuseYZnqtdn6dJGSWVQ2vtFI7W/fzNoeFnlFdoZYCFQAmsH6YEU5vdNqm1g+KiNRfTdFkbNSVG8daIrohESml8QrWk9QM13CpvxQSSC6YJYB02m+uTG43iYWSOKCXWiVC/jVeUdp5h7owyukPVDtWnoHeB7gInDMznDZZiGZVBzb9UygdiGLvuX22JPd5CD9I8dwGGRKbdt+Xxljze5bJebnFwRokPDV/MgND8vyguMK+6as37+WjByNIuvA6NoLgyinAwHSKVQIIIsLYo5s5QoAsFulBQlkKqdQypfC1vhwRuRqKBYn2173eQaBAAhImmqlI/UFEUJ5o1bUc5k0bduihwExRfMEl8JbtQfO0bIg3dhHkgLFTiXIQ1X0B9bcS9sPjSpzhooVsWX6EQidJNgwE8nFZAq0bwBjO5l1QMB8aI1KKDxHAhGGlHTh3lzlBYFwr7h1YM0Yqv6VLg31L07EYkOAEFTk+m1PdI0OorvGdb0au7t9cPRc8UI8Zv2GJaS37L9rpZ9YxqX/mEmy4SHzgQrtsody/Jj8cXFXhdNC0sDae31DzcqBMGEoQhKPwOEpBCCiLb6xGjPBAUw4jQ0AYx7F6TmDEmFFIDncsZrb7Ei95vJrF6GMXXfa1Uq3jOFbuP4hkzPnYrjsAOEE455wQL00Zh13/16+/+Gb5oWH8LcbFOEd8drtcAWnvXfwMDGGHPFQ0AAA==",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "\"<font color=\"\"green\"\">Complete</font>\"",
										"1": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"2": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"3": "\"<font color=\"\"green\"\">Complete</font>\"",
										"4": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"5": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"6": "H4sIAAAAAAAAA7VWbW/bNhD+K4aGDi3m0HwX6SIonLRNuqRZl/dkGARFom01sqRRsh0nyH/fyZLiCPMGI10Ef7CORz333D135INjksAussKE3sQUfugXvtN3zujnPNw7v70k+pse/HKZRYvJ4FAK6n4aH4yvztivi9HV/jHb/RgnO364d8jp3oDZu7udg4wd3p7vX8cnfLZf5Def7aHZsZeYini+ve10ncLPb4/8iQEUfxpGRWoX3l9TP46GiygZeeWyJ2u/c2PzKE3AlSCMMFir+P54cKY2dvoPj12njBr+ObF/8z33ZqsdGpHllmrhZhrFYek3jP1ZasEhs2k4DYrSu+sE6WQSFWDFNxAqcfWQ8GFIaRAwLRSjYeDfDInAWgcy5DjEDkDHaeAXFdq4KLK83+tl6RwiAEhkTW58G4zRwo8NMuG0N6jp/v7E9hQ4yt5PvQ9RuN1O+Ru68z8l/Q37CL+f86mdmYUHadtuYrUGWGVrAq18896HfNvNDgaj+73T60+QpGlu7GBkkjJPX9P7KI79nkC48/YiSsJ0nneOTjsE6vS+AwbJ33fuJH/XGWRZbC7MzUFU9ARzEZOdtwf7p18Pu504ujWdPRPcpu86u2ObTkxPlZXmmHNEmOqc+EPfRs22T+GoXicSuRQiymK/GKZ2AgEBJKPLciejqT8q9WWSrbMTp6pT/NxQRBNznSalaTAxNgr83pGZe1epva1X72H1t+EwN8CVctx18sAak3jzKCzGTp8IJp9sYxONxuCnZeWXxvE//Epb4+e6quvMlynzoiQx9uK58/OF/XqHwhSkb2ZRYL5FdyY+LmUHGxAVIMPcJKEpFf0lyQtbSTp3GrtXLLKSaOAnMz9HJ8uYV6tRWIoe3kEGGewrXXfTpIiSqQFr6RR6S4k/OVQZ8uwUrEJLhKkuHyWxUKRZrGMSWiPFWG3Nx+nc6UuKkeRubQNHp8+x5ki7y+9ozjTjwHdq6+5i3OWIMfq0Kuq9TdfCdhcpWW2H9NZ4eeFPMoicYoq3sNgi4pTSPmV9zJGi8rphks+jIoACcCoYEgxy+rBK6vGKdpBaawLAgyybp9fjVeJYO4/l64oFpwwRqXD5CMm4/rfs5hBUWbDq88ybETT3Z04rh4RQhRFT9HkWCXExEBC4wXg5E9pmQttMlEJaLmEIdoUrxWZUqDeja6goF4aGS1pMNAHhSHeF8WImpM2EtJhIQNa1sAiHub8ZEbKWCJW0JCJbNaFSUYKk5g3GK4lLM5iIVQMRxfSmTNhaJowpJpAgLSaMQ6IQZboG4a8jLgmznVK9lDCTWmyurTVtwgnjFI4O2Ro2BI50JHTVJ+zl0vpPHiAmmIysSZb6oR7hSsMIpLTNA0QFRwBvCvJK3V4WAzFRoQimMPuRigiYGzA92HMiQoFwEVVPEK80tiRHQlY9gqnkeMMeWV8SKRSGW0n7HJOSugRBmzcgr9PtglIEY7E6daXgG2prfbO7jCoJVy79nIgLdVZwz9INxuvMX0EljBlZgTCXbjx+1ygLAqZwCxAtaSnCBNwdpG4gHv/sljf/7/CZL+XVh/FlfPDlcPlOiKLO498trdSkFw0AAA==",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": "NA"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "\"<font color=\"\"green\"\">Complete</font>\"",
										"1": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"2": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"3": "\"<font color=\"\"green\"\">Complete</font>\"",
										"4": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"5": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"6": "H4sIAAAAAAAAA7VW+0/bSBD+VyKfemrVsNm3bSpUAT0oUFre3HE6WRt7Q7Y4tutHQor432/WsfO4chJHL1Z+iGe/3Zlv5ptZPzg6CfNpVuooGOlSRapUzqZzSfeKaP/q7nfy1j8fusfxkXT75lTt/5HvmE8Durfz4dvhye3V9fB4MCi+3Px2OixHo+Pd7GRncEguP1wyIioaxaPJ5c5Ztav2z+6K+HRry+k6pSruPquRBi+qikyZ5tPgW6ViM5ia5Dawy4FscFc6L0yaAJQgjDBYZ/H9+eBUeexsPjx2HRs1/HNi1f9aBOPFDh+RestsoV+ZOLK4QazGaQ6ALE+jKiwtuuuE6WhkSrDiPqaCuP6A8EFEaRgyX3iMRqHqD4jAvh/KiOMIO+A6TkNVzrwNyzIrNnu9LJ1ABOAS5brQKg+HaKpijXRU9bYbuqdzthfAUfZ+6b030dYi5a/ozv+Y9FfsA/x+Lap8rKcBpG2rjTXXwCp7ItAZtui9L7ZMP9vzr+4PD3xIUlXofPtWJzZPx+l3E8eqJxDuvL42SZROis7niw6BOr3rgEHyd517yd90trMs1te6f2TKnmAuYrLz+ujjxfGnbic2d7qzr8O79E1nd5inI93zbKU55hwR5nXO1UDlptkGEWSxKgdpPoIAwAWjdXmT20rdWj3pZGN/x5nVJW4Ml+dWS2akb9LEmrYLo3pHKlfh0DQr32HlC2RUA68NhnHXKcJc6ySYmKgcOpuESTm3DbW5HQLQlV5tS+P4B5y1tTiJSdeZ1PkJTJLo/HoZvLzwsd1BBehcj02oT8y9js+sxmADCK7QSaStdg+Sosxn4i2c1h6U08xSDFUyVgU6rwNerJrIyhveoeAZ7LPQ3TQpTVJpsFpQFNRingNm+QnyCqzExRKKgGcPAa21q01QABBISrcxF8N0Yo2UIkb9xghQIMilBXK/flwCO6IqbzqJu5whxsTSYr2zbVAJAMSZaOLwmiiKUo0yCJ1iijew2CD0gribxN/kPhJE3LRUiokpQ0i/FBxkRuVj92GR1bMF7zDNcx2CP0iznr+eLTJHVhNpXxckGPcQE14To2sr/XR6CwjKVmx2PAnGFE3U2FlNIROcIiHocg6hOXyMfILnPl7MhK0yYStMPMoRhcrWD2PkmUxYMCY/MqHYpx4c5y0zgdMFXVSUMbqemhCPIa+VDZG+YD9TFOq5Hka0lV9DxfOlnVuNF+KuSV0Chi6bNQjQsMJ4OZG60xCmK0SYBM0h3Lao4OsRFxMMuSDk+uFCuM8W1xNEOOOYILi7l4lw5gIRv3EBPl5MhK4Sof/QFgEizczyKefPI0KfJCKw60nkrs5M+PKQHuJtRcDHephwAVOx0ZaHqXymtv6FCUxAOM9fKQkYhZ1cvHWyJnFRF4mWiSCY0GcW5enRJaEq0Np2ki9dZPZcJFt1CbKmyYVh1MB9O5sq9L80/BNMXErgOvFW1OUyShmieO5iTUS4RIQ2beK5MEN/hgjI0/WQZHyZCcgJbiy3bUXPe/yra7/0v8IxB/YDiPE6Qjg5qt8J8Xzn8W/pXJCyBw0AAA==",
										"7": " "
									},
									{
										"0": " so I decided to stop telling most people. I think I still take it matter-of-factly.   What do you do to have control over the experiences? You mention dissociate",
										"1": " how do you do that?  I can mentally tell it to stop sometimes (not all the time)",
										"2": " but I can only make it leave",
										"3": " not become clearer or last longer. It is not really intentional: I cannot tell myself to dissociate and actually dissociate. It usually happens when I get overwhelmed by external stimuli. I can \"\"ask\"\" to dissociate/wish to dissociate in my mind",
										"4": " but it does not work every time.    I hope that my answers were helpful. Have a great week!    Sincerely",
										"5": "    Janna\"",
										"6": " ",
										"7": "0"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "\"<font color=\"\"green\"\">Complete</font>\"",
										"1": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"2": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"3": "\"<font color=\"\"green\"\">Complete</font>\"",
										"4": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"5": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"6": "H4sIAAAAAAAAA7VZi27bxhL9FYFFL1rUXu374cIokrRJ0zS5SezUhS8KgSYpizZNKnzYcYL8+z1LUrHoyo5gRYINWMslZ8/MmZkz9KcgyaPyel4n8eQiqcM4rMNgL3jHn1bxs7/O/2Y/vf/p6Oxq/vrl9Ndnr5s/fpuVzz/8fdRYejx7dkBfyCr9+Oq8ef86PMmPzPHHx5l+96aZv0lnT9MniXt8eljNjo+iqJnN3z3a3w92gjqszl+FFwmshE2c1kV5PXnfhFk6vU7z04m/PNH9vr+SskqLHFsZoYRitTvf/z4FTZkFe58+7wT+1PgryMKTs2pyeXOHI6y9pbtw0qRZ7PdNs/CyKLFhXhZxE9V+904QFRcXaY1VekK5YsZNmZzGnEeRcMoKHkfhyZQp6lykY0ljGsB0VkRh3Vmb1fW82huP58UVTgCTpEyqJCyjGbkOs4QkcTN+1MN98wXtITDq8XfjX9J4/8bl3/PH7/H7zdz+vfgVP/+pmvIyuZ7AcfuL05YJcM1XHLXbW41/qfb59DDlT67PTAk3NVVSPjpNcu+pl8XHNMvCsSJ09MNRmsfFVTV6dThiiNTPIyxo+fPog5Y/jh7N51lylJy8SOuxEoYIPfrhxe+HL//cGWXpeTJ6lkTnxY+jJ7OyuEjGViDWklFBNBsdhNOwTPu7cIB5FtbToryAfVgQvI1vftqEp55QVbZ78DzoApP5hSTffXfgyZReJMdF7pd+a8pinoz/PGtOsrMwD/urH3H1v9NplQDaLuN0J6iiMknyyVUa17Ngj2l6szZL0tMZNrp+rciyf+3za4t9Roid4Kp10STN86Q8Wt68fOH3xR3KgOzJZRolr9MPSfbWEw03gHVVkseJJ/DzvKrLjsFVsFif1NdzDzMK88uwIgftgW+uprHnOL4j5nPc57c+KfI6zZsEq35TPGkZ/WVD559J2WCVM8qI085/rDVOLy72Z+KMMWKV6perWXHlF7kliGC/iK0AYp0SxMGB/uOoR9uUfTYxbbkiUombi+2diyT1NytimOvOwVh3varDizlOzimnu1TtCnrI7J4Ue8IS7vTxAkl1ldbRrAWjDKFMfN75dOPVtze4o6IskwgGp2FWJV++v71xHRt6UgTLMITB041tD0klU9Lc5eAK5/Ix657PJpeMXIWXwdCLlgI0V3rZjdxKwYkQcmHEPBwLvw+LdpYY2QWecmHXhMJXQhFKCk20tMtQhGZCEeF6KFx+FQnIvxKIuA+IpIZoLToCc6mFXg+JmFzyfyORgilGhGTLSKRQyhFKZW9EPRjJLXqxIb2cIEp39FJKqI3YpajSmrAhELQ7ADHU9Ta2FBJEniCLWyOCcWPFJiFRxllKrB2QCy1ccmI7/sLIBil/b5oweMxjaQuXpdARm+SJRtFsibQMRWtpJGyo3gbfErs4J1L2/rKMq7XZtSImBgUKZBVqGYjBY72zZG/j4UBuhYQPKxf0CFjVGtFC6fUr1woglvrORPmgl1kmfeUSrreht5QmDrTum55FBTbrV64V3LJWKo1yO0gTZI00hPdpYoXbDregrwnrCpejyFa2SeWCPFeSSDfgFqJgGNE9t2Djm7X4IbmEj7y0nYxBXZFrxmR1mjBqIH3g/0EVZoxqiGGj6MLKlvSKM2jKynZWuJPrp/yKsDBmNNJbGT7EYpXjhIsFlm01eQYv9k0eWNYk2OpMQe1TThMrhlHhCg8n1PVd/utBeVjSW0mgqVtvGY7PJq2RCUGhzzV3AyQCpQtyWtLeypYaCgZy0XUt+M5ytr5eWQVFUkmhTQatEYuGY+znCytfV8MPguKkT8c2UZig2q0ZlLuQGCMZYbfmI2lRvQgGnYWV7fDLoUzyPirojr4dbMAvpQwFk8ygFjMoSz8Jabqwsp1GL6HEFUa/lsRWr6uHV0svHFNbHNpr0SUoWjIMk6oXX8Z+u75yS0caTYkvwm1t0WZ9hq3CYpifUqwelmKkCoqBU3JhZDsMQ6MnnHcVTHopuRHDjHNME86GeQ8JAd6hF/dWtsQwaziKi1yUsHVHx9VSEi0QKU4UH7QVFGgUYszGfQl7eNrfi8RQTEO0a5BOS75m2t8xzlNrJGqx00MkUBCcqF5LuocjuV9LoglLaVpvSeU2m4IFElxDTA6zXjBDNSeuEy3QeFsSLbDhB75u2BZyo1IsQFPMjlwOch6rCr3G9Eac2hK9UDtRbjpBoZR1Ys2J/o5MEUyhgXAzzBQICqnRN7ukXwPKnaVY3EcwbqhEH1i8nrDrSvzVYlIItHRLDB0yTDKN6JvFLMy2lCxCY+AW3XinmeNmI4kPiqIzoYPcwuIoeqTt5zu9rbEeYwTrZhU0adSfzV5IaoohUgyTRWkDgvVjF7XbeiGpKGFfxvr2ZfcGaY+5F0UX+Td8tSo59cWlr8UPR3J/KTaCUNN5SyJjNiOXYRgRoIEGQAwEANyleyPs8z87/v94Z3jMc/+fDSHbA+LJcfudMWeCz/8HXqhR0+UcAAA=",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "\"<font color=\"\"green\"\">Complete</font>\"",
										"1": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"2": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"3": "\"<font color=\"\"green\"\">Complete</font>\"",
										"4": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"5": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"6": "H4sIAAAAAAAAA7VWaW/bRhD9KwKLFAkgr/Y+FBiBkcSxG8dtJDtqXBTCilxZtCmS4SH5gP97h4eisHURJ4YJfRBnZ3fmvXkzy1vPxX52nRYumC5dYQNbWG/ondL9PHj36fJPYibl4uzy6GN48dn6b98c2/SATEa5WGef9+h8+dsIn7IB45P1l9l6NRpdxTef94NL30ZjHGbnRyZ/P94/Ux8Wy6O3e7u7Xt8rbH55bJcOotgyCIsku55+KW0Uzq/D+HxaLU9l6/fJZXmYxOBKEEYYrE1+f916ZRZ5w9u7vldlDf+8yM4u8ulqu8MgUm9pFmZlGAWV3zyyqyQDhzRLgtIvKu++5yfLZViAFc8wFUSZOeHzgFLfZ0ZoRgPfzuZEYGN8GXAcYA9CR4lviybaoijSfDgYpMkaMoCQKHO5s5m/QNc2csgF5WCvhfvxK9oTwCgHvwxehcHuj1H+jO4/kPRn7A38fs3LbOWup0Db7ibXzAGq9J5EG9988CrfVetDfTqe3YwnQFKZu2zv3MUVTx+SmzCK7EAg3Hs+CeMgWee945MegTq97IFB8pe9K8lf9PbSNHITN3sfFgPBFGKy9/z9wcmHo34vCi9d753zL5MXvdeLLFm6gWZQaU4wQ5L0xnZus7DdBQmkkS3mSbaE+BCB0bq68Xlpzys55dHO+NBryhJVBhfvnI4rKYVLd5bEleltmSWpGxxdlLPowsa2Xb2B1d/n89wBtB1Ccd/L/cy5eLoOg2LhDYnEW9vChecLcDStLYmi//hVto2fYqzvrWuKpmEcu2zyrfO3CwebHUKB1N0q9N0f4ZWLRpXMYANoLndx4Cr5HsZ5kTX6zb2NfVpcpxVM38Yrm6NxnfB2NQwqhcM71DyFfZXr6yQuwrh0YK2cgmmt568ODT/TrAQrY5hAIUz1KGKYYZvVNinGCEdyY80XybqycYUMJq0RPL2hMEZKjJSojzJaA9oya3tJGMkIRVroZtG0OzctWm+mSCle5yFos54XdplC5hRTvIPFDiMnRAwxH1KNhJZnGyT5Oix8YF9iQjhHAOKuf7uldbQF7idZ5nyICDy7r6+jLXW0y2T1uoXBBUHCqCZHkApR/0dwDnlVNWvOp9MVRWu78josSqyJMNWB3/IIVkkIIqalwvw0FNKFQjpQjBBIM1ZXg3LBHgaE3A+ECEk5wlJ2gBAplEG61QPlT1MTiUE3uIlBGJMPRAIlIfcgoUxojSQVHSSUEwNdwngb5YnUpaHstIkBzNUj5hFQoOGqifsvKIxIzVHTZxBGfxfK3Eb5Q+TVxUI0EKZxM1e4MuTB+roXilZEI8JYBwrHEhtkWCMw/n0oP9UohBGBeDO4FIHRIh7VKlxJbhDTpAtFG8mhH9sx/EStwkk1Ypueh/rIHxDYfVCEMBojprpdLyRwhEgrsCeaXvAtQeHWquWlsaD6UfKSjMPENaIrL8l5dZcQ0wZ5GiQUupHo+tJUVIHOHqUukA7cKAabDhJFFCDB7Y1C1dOoS1CMYLjg5nmsuJSGDyboiO7dqAxVGmEsmiDk7u9+9c1/AeccVt9BjNcZwtFB/Q4jkHp3/wD8DSkDEQ0AAA==",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "1",
										"1": "1",
										"2": " ",
										"3": "1227    Mfast Extreme  1. 1.\tI feel depressed most of the time  2. 1.\tOften, I get the strange feeling that I am from another planet           MFast Rare  1. 1.\tSome days I have major mood swings where for a while I feel great and then I feel depressed  2. 2.\tSome nights I have nightmares so bad it scares me  3. Sometimes I am convinced that I Have more than one personality  On many days I feel so bad that I can't even remember my full name          MFast Unusual  1. 1.\t On many occasions, I feel things crawling on me when there is nothing there  2. 2.\t Sometimes I hear music coming from no where      Cbsash inconsistent  1. 1.\tThe voices talk about the same few things all the time; The voices talk about many different topics  2. 2.\tThe voices talk about me; The voices talk about different things but not about me  3. 1.\tI talk back to the voices; I don't talk to the voices  4. 1.\tThe voices order me to hurt myself; The voices do not tell me to hurt myself  5. 1.\tThe voices I hear are not real voices; The voices I hear are real  6. 2.\tThe voices are always the same; The voices changed over time  \t1.\tI am not bothered by the voices; The voices I hear are bothersome",
										"4": "1",
										"5": "1",
										"6": " ",
										"7": "0"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "\"<font color=\"\"green\"\">Complete</font>\"",
										"1": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"2": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"3": "\"<font color=\"\"green\"\">Complete</font>\"",
										"4": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"5": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"6": "H4sIAAAAAAAAA7VWC2/TSBD+K5FPnECE9b4fQRXK9WipgMDRQBGnU7SxN4lTx05tJyFU/e83fqSJRe9UUdWKIu/s7M5838y362vPJUG2XRYuHC1cYUNbWK/nfaYneXj65fIr0T4/3wznZjH7MPgiF1sV9NfJc/wxxZe5HEv29ZiyD2SePP9x9jm5GEyyIn19PJhv+qdbf3564c/fTU+uBv3TwTqcHh15Xa+w+eXALhxEsaswKtJsO7pa2TiabKNkOiqnR7Lx++KyPEoTcCUIIwzWOr+/r71VFnu965uuV2YNb15sx/N8tN6vMIhUS+qJ8SqKw9JvEtt1moHDMkvDVVCU3l0vSBeLqAArHmMqiDITwichpUHAjNCMhoEdT4jAxgQy5DjEHoSO08AWdbRZUSzznu8v0w1kACFR5nJns2CGtjZ2yIUrv9/A/esW7RAwSv83/1UUHh1Q/oSe3EH6E/rHz7SD8WfiYT1QX/4fkP+E/Qm/3/NVtnbbEdB3tMs5c4BueUfCtW/uv8qPhmOXhd/Pr07GQNYqd1l/6pKSr/fpjyiOrS8Q7jy9iJIw3eSdwbAjEXnZgbHkLzvfJX/W6S+Xsbtw47dR4QumEJOdp2/fDN+/63bi6NJ1Tl1wmT7rHM+ydOF8paDgTEuBCMWdczuxWdQsgwSWsS0mabaA+BCC0arKyXRlp2VbufzF63OvLk98aCiihfuWJqWpv3BZFFj/2GY2sHkz+QMmP0wmuQNklOOulweZc8loE4XFzOsRfmCbuWg6Az+Da1saxzs/LcytaecmCOt6m4qfUZQkLrs48D20vzlcELp1FLiP0XcXfypbDXKAvstdErqyhc+SvMjqHi4h1PZRsV2WEAObrG2Ozqt097NRWHY5jKHeS1hXuh6nSRElKwfW0ikcVT1961CTM8pWYKVUKEQZN+WjGNZiN9skVTkYLBtzPks3pVFxJHRjA0+vx4hkSDBcPsRoUm4UrrJGUFprZMR+crfdTqewWiKlRO0gjWrSyAu7WELuFFP8AosXxAwJ73HeExIBo992WPJNVARAP6OUIY3lTfd6T+unPfAgzTIXQEDg2d0OP+2pY20my+EeBeUEKaOqJAlhmoj/IjiHrMqa1fuz0ZqijV17LRIJBm4R1S0aCeYStKLFLoh5HChSI4VrJFgxpdmDkCiuNNKUtZAowdVtR0AQ/UhFMQwpUfcWlpibhyChXGiMJBeHSCjX0O4c410M8ctISBsJaSEhVMCxa6oglEqh7tle5E4ojGhjkCQtKIwRwaHyoonxSEKBmxUOellVXlBm1ENqwnF5tFQH6x4Ix4wwZBqdCMofSSageNq0MJFa83sDIXcAUQxuPKFaOOA8AengXYhflztt46AtHEwRpDWpomhm8D1x0DtxCG60Ac3xQyBCMEmQZGIX45HUrhBQVj3SMLiGHtRakjJQNhMtjUj4VAC2mjsRovy6SP5f7pwLkKKsCeNwA95b7ncURRpecsNbKlFYK4ZIczpCjMdBQoEvymnDF4aj6yEHl1LaSMQwbSHR2IB2+K4oN/90yy/+OexyVn4BMV4lCBuH1ZhQLr2bfwFxWvOYDw0AAA==",
										"7": " "
									},
									{
										"0": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"1": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"2": "\"<font color=\"\"green\"\">Complete</font>\"",
										"3": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"4": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"5": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": "NA"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": "0",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "\"<font color=\"\"green\"\">Complete</font>\"",
										"1": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"2": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"3": "\"<font color=\"\"green\"\">Complete</font>\"",
										"4": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"5": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"6": "H4sIAAAAAAAAA7VWbW/TSBD+K5FPnECEzb6vt6cKlQKlFLi2lNfTKdrYm8bUsY3XTkgr/vvNJnZji+qugquVD/Hs7M48zzwz66vAZlG5Kiobj+e2MrGpTLATvKPPXXzw/uIjeVi9pGevizN5+cx9duY4nldT+/H5i/xodriYX0xqcXB8dBkVq4f7Kv2kT+KX5+/mb1az9yk//PRyMnn1NLMrGT35JrKT3d1gGFTGXbwxcwtRTB0nVV6uxl9rkybTVZKdj/3yWDZ+723pkjwDV4IwwmDd5PfXVVCXabBz9X0Y+KzhX5CayRc3Xmx3aETWWzYLkzpJY+83Tc0iL8GhKPO4jirvPQyifD5PKrDiCaaCKD0lfBpTGkVMi5DRODKTKRFY60jGHMc4gNBpHplqE21WVYXbGY2KfAkZQEhUWmdNGc3QyqQW2bge7TVwT67RngFGOfpt9DiJd7eU36NPbks6uP437ffYU/j97upyYVdjIG63zba0gKu4IdWNrxs9drtHTp2efLPHn54ATbWz5d65zTxTr/PLJE3NSCA8uP8hyeJ86QZvzgYSkT8GDwZ7RZHaD3ZylFQjwRRicnD/6MXZ61fDQZpc2MGBjS7yB4P9WZnP7Sj0BeaYc0RYOHhrpqZMmm0QtkhNNc3LOUSFQIyuq5qd1+bcy8i6R8/eBptypF1Dlczt5zzzpr25LZPIjPZNaSLjmsVLWPxzOnUW8FCOh4GLSmuz8TKJq1mwQ5iU17aZTc5n4KdkuLblafqDn7e1fpKxYbBc0zJOssyWH7rO3YUX7Q6hQOB2kUT2OPlm01MvLtgASnM2i60X7WHmqnKjWg9iYx9Xq8KDjEy2MA69XSe8XU1ir2t4hzoXsM+77udZlWS1Bat3isdrFV87bOgZlzVYOWEYCdw8lJB2scmJMMI00qFs7G6WL9dWxRAjYWMFZzByogniun2wAMB12TQRwSREJCTtomwjtc3pt7Pt9lA0h7vKzAtIn2KKH2HxiOIzInYE3qGgKqw+t3DcMqkiKAFlWFGkKf0+vNpSe7oFH+VlaSOICFzb69fTLX2kz6Z/3eLQkqOQqTZND+Nmjh1k5cu2OZ6MFxQtzSLo8QjnYIGkpF0eWRgq3OFR/zQQ1gfCekCExAjy3xSecK5uB4TdCEQJEirQEe8CUULxcCsuIu4GCAvh9pCiIYuEXqu3REJ+RAI61UwiznpQCKaMyE5RyE9joX0stIeFaA6Dsm0BCkq4HRZ6Y1UIVdA1COseFKqY7kAJ2d2UhXCJwrb2mK/n388LDAarFgSpHhKmsO4IDMs7EhjMOqxbFStC2C8JjHOKYU6S/uzk0CydXlF3VBQQscasKb0gXuW/AEVISqDttexhEXA78k6v8LuZxIIRJGgzwCgXt4Ry8yQmknHGkFb9tpfQKqJzP95RrzAMn0ZStQ3pb85faBVQqMCIsd6tAlag6H9p+3+dYBSGp7+qNzJmQt2yLPRmhcE0l3Cg7n9phKGGuda9Wf4e+k/+L3DQof8gYnydI5wdr98JFTL4/g+SBfU1EA0AAA==",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "1",
										"1": "\"<font color=\"\"green\"\">Complete</font>\"",
										"2": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"3": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"4": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"5": "\"<font color=\"\"green\"\">Complete</font>\"",
										"6": " ",
										"7": " "
									},
									{
										"0": " 30 sec",
										"1": " I smell things that remind my of my mom's food specifically. Never had mismatched smell (contradicts surveys). Endorses mismatched tastes but would not consider these gustatory and olfactory experiences hallucinations (contradicts surveys) - would not compare to voices. Random and definitely less than others - 1x every few months.  Tactile happens a bit more - when I'm in bed I feel something like bugs on me and I smack it but nothing is there. About to sleep. Don't really worrying.    Ask about AE frequency - says it is daily but no type ever happens more than weekly/monthly  5x per month - no set schedule. Sometimes clustered back to back days but it doesn't necessarily mean that I'm good for the month.    Ask about VE frequency - says it is rare but that it happens whenever he is not busy  Happen randomly",
										"2": " no cues",
										"3": " more like a random situation. When they do happen I have to turn at the spot to see if it actually did happen. It's really brief",
										"4": " a couple seconds. The images are different when you actually look. They look like black figures - not like in the form of a human more like blobs. Oil stains - that type of color. Usually black but random arrays of colors - not vibrant but a different kind of color with a very dark hue and only at a certain angle of the light. They seem unrealistic compared to the world. 2D. Out of the corner of my eyes usually. Sometimes",
										"5": " it passes through my field of vision very quickly. The last time it happened I was talking to my brother and he didn't see anything.   1-2x a month",
										"6": "0",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "\"<font color=\"\"green\"\">Complete</font>\"",
										"1": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"2": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"3": "\"<font color=\"\"green\"\">Complete</font>\"",
										"4": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"5": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"6": "H4sIAAAAAAAAA71W+0/bSBD+VyKfemqlsNmHd+3NCVURHKWFFggcr9PJ2tibxODYrh8JAfG/32ycl68pRSDOyg/xzOzOfPN9O+sHS8d+Nk0LHXgjXahAFcpqW3/RvTz4dH57SWR4fR3jK3Fz79wdXfG7oy97/pTusoPuXVpG7sXhrhOy/viSnnzZOdTn/ulJp5fdto7vrvyiKzpDcX6U3A/Gu6OD48H2ttW0CpXfflMjDVlUGYRFkk2976WKwv40jAeecXtiHneuszxMYgglCCMM1qq+vx+sMous9sNj0zJVwz8rUr2b3BuvVkhEZksqR68Mo8DE9SM1TjIISLMkKP3CRDctPxmNwgKsuIcpJ47sE7sfUOr7THKX0cBXvT7hWEpfBDYOsAWpo8RXRZVtWBRp3m610mQCFUBKlOlcq8wfoqmKNNJB2erM4Z4s0Z4BRtH6rfUxDLZf2/J3dG9j09+xXfj9npfZWE89aNv2otZMA6p0Q6FVbN76mG+f7ncP+ueXafAdmlTmOusMdGz69DW5D6NItTjCjfcXYRwkk7zx7awhEPmj8aHRSdNIX+jeQVi0OHMQE433B/tnXw+bjSi81Y1P2r9NPjR2hlky0i2XAb02wQwJ0jhVfZWF81WQNY1U0U+yESSFPIzOKI0HpRoYDel8689Tq+IiWjcU4UhfJ7ExdUY6C33V2lGZ8lU+d96D86jfzzXAoTZuWrmfaR17kzAohlabMCGWtqEOB0OIc4Q7syVR9EOcsS3iBGNNazLrihfGsc4u1oPXHfuLFdwBdetx6Ovj8E5HXaMsWAAyy3UcaKPYz3FeZJVkDYjK7hXT1ID0VTxWOTqdFbzyhoERNbwDzSmsM6E7SVyEcanBaoICbybhZUDVHi8rwUopnCO5eJjNF855TeBniEo6N+fDZGKMwhjnNoi02gyLtX0cDM6gzOanx8UCgWnNN1u4OJMMO2S51qXSsauAvFCjFAqnmOItLLYwOcNuG8s254hhdr0Akk/CwofmM2Jq5eKx+bDqaXeF2k+yTPuQsK+iXC/fu6vGkXofjRRXKJjrIiGdqkxbkp81N4eiDF/V7sQbEzRRY6vWQYKpFACCrveQYOHaqyba8pdAQC0bcdCncFCXICFYlURI/kwgdDMQx3EkYkzUgADheAVESPttkMC8BhnySjcukQ5/NhT6IxTKqc1Bp/Y6FMrhfliJ06UvRvIfbZE6J9JFkiz7Rc0Uebm6GNxwFGG3dkCB9v+HExu5Lp9nYbb7GkqMSDkipEaJjYm9NmsE+/WB/xkSVkfC6ucdphZx5khshz+TEraREtuhNjSG1pE4nK9xYjsvR/I0JzBf3cX8xa4ZwC/nhEOZBJHa9Oe2ZHQFBLtvhIPZCG5oXD0uc14zuQTFwAhltREsKHwaIrx8Xj6Cn5QWxfDpyqurxJVwWp4trQ2EwLiQDEm7DgSuj9VdAjneZm7B0UR4MbeoIJI9e25tQOII4Qgka3PLEY5cOyNUPP7TNJ/2N7DLZ/Ptw+xZgbBxMHsnVEjr8V8b+rza+AwAAA==",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": "2",
										"2": " ",
										"3": "0",
										"4": "0",
										"5": "0",
										"6": " ",
										"7": "0"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "2",
										"1": "1",
										"2": "1",
										"3": "1",
										"4": " ",
										"5": "1278  MFAST RARE  1. 1.\tSome days I have major mood swings where for a while I feel great and then I feel depressed  2. 2.\tSome nights I have nightmares so bad it scares me  3. Sometimes I am convinced that I Have more than one personality",
										"6": "0",
										"7": "0"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "5",
										"1": "3",
										"2": "5",
										"3": "4",
										"4": "5/24/20 17:31",
										"5": "2",
										"6": "2",
										"7": "0"
									},
									{
										"0": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"1": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"2": "\"<font color=\"\"green\"\">Complete</font>\"",
										"3": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"4": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"5": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "1",
										"1": "REDID VISUAL TASK GREEN",
										"2": "0",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": "\"<font color=\"\"green\"\">Complete</font>\"",
										"7": "0"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "1",
										"1": "1",
										"2": "1",
										"3": "1",
										"4": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"5": "\"<font color=\"\"green\"\">Complete</font>\"",
										"6": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": "0",
										"3": "0",
										"4": "0",
										"5": "0",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "1",
										"1": "1",
										"2": "1",
										"3": " ",
										"4": "1335  Rare\t  1. 1.\tSome days I have major mood swings where for a while I feel great and then I feel depressed  2. 2.\tSome nights I have nightmares so bad it scares me  When I hear voices, I often develop fears of leaving my house or room       Unusual  1. 1.\tDo voices tell you to do things?  2. 1.\t On many occasions, I feel things crawling on me when there is nothing there    Extreme  1. 1.\tI feel depressed most of the time  2. 1.\tOften, I get the strange feeling that I am from another planet",
										"5": "0",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "1",
										"1": "1",
										"2": "1",
										"3": " ",
										"4": "1351  Extreme  1. 1.\tWhen I hear voices, I hear them from either my right or my left ear, but rarely from both at the same time.  2. 2.\tOften, I get the strange feeling that I am from another planet     Rare  1. 1.\tSome days I have major mood swings where for a while I feel great and then I feel depressed  2. 2.\tSome nights I have nightmares so bad it scares me  Then times when you cant go to sleep, do you often smell strange odors that are not really there?",
										"5": "0",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"1": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"2": "\"<font color=\"\"green\"\">Complete</font>\"",
										"3": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"4": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"5": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": "NA"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": "NA"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": "0",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "\"<font color=\"\"green\"\">Complete</font>\"",
										"1": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"2": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"3": "\"<font color=\"\"green\"\">Complete</font>\"",
										"4": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"5": "\"<font color=\"\"red\"\">Incomplete</font>\"",
										"6": "H4sIAAAAAAAAA7VWa2/bRhD8KwKLFAkqn+59PBdGIMdN7Npx/FadoiAo8iTRpkiFDymS4f/ePVKypEYtDLsi/MHc27vZmZ1b8cExSZBNR4UJvaEp/NAvfGfXuaYf8/DTzf0f5Je8jw9m50d0llCTZeHpvds35WkyONn/zmJ39G0a3vVPurxzeH5VjCfHnZvZwe1deDJuD9nMDM5ur3+fFNeD2+llfL635zSdws/vT/2hARS/DKMizabet9KPo940SvqeXfbkPO/GZHmUJpBKEEYYonV9fz44ZRY7uw+PTcdWDf85sd+9y73xcodGpNpSL3TLKA5tXi/2x2kGCaMsDcugsNlNJ0iHw6iAKO5iKojSPcJ7IaVBwLRwGQ0Dv9sjAmsdyJDjEDsAHaeBX9Rog6IY5but1iidQAUAiTKTGz8LBmjqxwaZsGy153TPn9heAUfZ+qn1Pgr3lpK/ofv/o+hv2AH8/ZyX2dhMPZBtb1FrZoDVaEOhdW7eep/vXaRnQovT3/ZvQKQyN1m7bxKr0+d0FsWx3xIIN952oiRMJ3nj9KpBoE+/NjpfOpK/a7RHo9h0TPc4KlqCKcRk4+3x4dXnk2Yjju5N45MJ7tN3jQ+DLB2alsugyZxghgiRjUu/52fRfBuAj2K/6KXZELABjtGqs0m/9PvWSibZub506pbEq4EiGpqvaWJD7aHJosBvnaS51076Jjb5PGEGCV96vdwAM05x08mDzJjEm0RhMXB2CZPyKTYwUX8AeUq6VSyN4x/ybGyRJzFpOpNKIC9KEpN1VpNXFw4XO6gAo5txFJiz6LuJL6zJYAM4LjdJaKx5j5K8yGr3WhJ13CumI0s08JOxn6PLquDlahRaf8M7dHwE+2zqhzQpoqQ0ELVJoVe5+SmhlsfLSohSTCmSXGB4iCYEq8XqvChIwEhaVlU4H6QTG2QuwmoRhFQgyBm0WlQnMcwZLIZlNr9KnGmOtNIri9XOxQ2VnGNEXFytcyJJvZ4X/nAEpdsidrDaIeyKuNDMXSaRpvrrgko+iYoA5JeKcMSVfGw+LFW9WPIO0iwzAeCBzObp9WKpHF0X0r4uSTCXIEGZto+Sgmr+b/rmUJVtWX0+9cYUTfyxs6YhYUpipPCaiIQTThGlegHCtkOF2LaD5vaRlDD9GiaUEMWQxmKVCaVES8RqZ1kI98VM2DoTtsaECw0dr1CUAE2ttZ5DhXljsoGKplwi4a4x0dCkhbMBg2+HiKYCaaEquTiV7JnmYhtbwqQSAgnOVomA4ayDMV5gbMdbXLswUaQFEeABIdhrzMW5ggFElV5lwgUlLkwAMQdRL2ZC1pmQNSYKcyRk1RJOKVfP40E28hBwqRVSeq0jgmFM4ZcQLyDEdogQomE202r8aipfxwSqhcEl/jH9CRUMSSzmEC8n8p/eUq5EUtc3kWqXu6+xlnQpHEfk2tySGk5Gbt0Si7EdIhJMjQmuxrxk5JkNoRuHlpKE/XBFFEwACLp6AbEtZ4EXJKlhuKvdZ172zdZymVLQYEFWmbhcw+cilTUTrh//atrP/Ds45ch+/DBeFQgHh9U7fD0Q5/FvIbPUYgQNAAA=",
										"7": " "
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "1654    Extreme  1. 1.\tI feel depressed most of the time  2. 1.\tOften, I get the strange feeling that I am from another planet     Rare  1. 1.\tSome days I have major mood swings where for a while I feel great and then I feel depressed  2. 2.\tSome nights I have nightmares so bad it scares me  Then times when you cant go to sleep, do you often smell strange odors that are not really there?   5. When I hear voices my hands begin to sweat    6. When I hear voices, I often develop fears of leaving my house or room       Auditory   visual      Needs to redo auditory task, visual task, and do f/u with demographic check and ask about the control she has and the fear she has to leave her room when she hears voices         AUDITORY TASK DIDNT SHOW UP ON MATLAB??    Visual task still red - sent 2nd redo req     Translated from Spanish to English with Cata:     When she hears voices she feels so nervous and she usually sweats int he hands and she feels cold in the feet. And this happens when she is nervous but when she hears voices its more. The amount of it is bigger. She feels like fear of the voices so she doesn't want to leave the room or the house and she wants to be with her mom.     It depends how often she hears voices. How much stress she has or wants happening in her life. Sometimes ti might be often, it can be every day or sometimes it can be that she has them stop for a month and it;'ll depend on how she feels and whats happening in her life so it's not the same thing every time.     Content: they usually are negative voices. And they are like mumbling so she cant understand what they are saying. And then its like ... they are never nice voices.",
										"1": "8/25/20 17:38",
										"2": "1",
										"3": "1",
										"4": "1",
										"5": "1",
										"6": "\"<font color=\"\"green\"\">Complete</font>\"",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": "0",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": "NA"
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									},
									{
										"0": " ",
										"1": " ",
										"2": " ",
										"3": " ",
										"4": " ",
										"5": " ",
										"6": " ",
										"7": " "
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "task_data_auditory_redo_complete",
										"type": "string"
									},
									{
										"key": "1",
										"name": "task_data_auditory_qualifying_redo_complete",
										"type": "string"
									},
									{
										"key": "2",
										"name": "task_data_auditory_qualifying_task_5_complete",
										"type": "string"
									},
									{
										"key": "3",
										"name": "task_data_auditory_qualifying_task_6_complete",
										"type": "string"
									},
									{
										"key": "4",
										"name": "task_data_auditory_qualifying_task_7_complete",
										"type": "string"
									},
									{
										"key": "5",
										"name": "task_data_auditory_qualifying_task_8_complete",
										"type": "string"
									},
									{
										"key": "6",
										"name": "task_data_auditory_qualifying_task_6",
										"type": "string"
									},
									{
										"key": "7",
										"name": "task_data_auditory_short_b_complete",
										"type": "string"
									}
								]
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "count",
									"categoryFieldKeys": [
										"0"
									],
									"seriesFieldKeys": [
										"0"
									],
									"isStacked": false
								}
							}
						}
					}
				}
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/20e228e4-63c7-480a-a860-4b61e9623727/resourceGroups/EDU-US-DevPoc/providers/Microsoft.Synapse/workspaces/educsademo/bigDataPools/NotebookPool",
				"name": "NotebookPool",
				"type": "Spark",
				"endpoint": "https://educsademo.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/NotebookPool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 10,
				"cores": 16,
				"memory": 112,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\n",
					"blob_account_name = \"eduusdevpoc\"\n",
					"blob_container_name = \"yale\"\n",
					"from pyspark.sql import SparkSession\n",
					"\n",
					"sc = SparkSession.builder.getOrCreate()\n",
					"token_library = sc._jvm.com.microsoft.azure.synapse.tokenlibrary.TokenLibrary\n",
					"blob_sas_token = token_library.getConnectionString(\"Source files\")\n",
					"\n",
					"df = spark.read.load('abfss://yalepower@edupocdatalake.dfs.core.windows.net/COPEDatasetDeIDFinal.csv', format='csv',header=True)\n",
					"\n",
					"##display(df.limit(10))"
				],
				"attachments": null,
				"execution_count": 12
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": true
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df.printSchema()"
				],
				"attachments": null,
				"execution_count": 13
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql.functions import regexp_replace\r\n",
					"\r\n",
					"df = df.withColumn('task_data_auditory_complete',regexp_replace('task_data_auditory_complete', r'<[^>]+>', ''))\r\n",
					"df = df.withColumn( 'task_data_visual_complete',regexp_replace('task_data_visual_complete', r'<[^>]+>', ''))\r\n",
					"df = df.withColumn( 'task_data_auditory_qualifying_complete',regexp_replace('task_data_auditory_qualifying_complete', r'<[^>]+>', ''))\r\n",
					"df = df.withColumn( 'task_data_auditory_qualifying_task_2_complete',regexp_replace('task_data_auditory_qualifying_task_2_complete', r'<[^>]+>', ''))\r\n",
					"df = df.withColumn('task_data_auditory_qualifying_task_3_complete',regexp_replace('task_data_auditory_qualifying_task_3_complete', r'<[^>]+>', ''))\r\n",
					"df= df.withColumn('task_data_auditory_qualifying_task_4_complete',regexp_replace('task_data_auditory_qualifying_task_4_complete', r'<[^>]+>', ''))\r\n",
					"df = df.withColumn('task_data_visual_qualifying_complete',regexp_replace('task_data_visual_qualifying_complete', r'<[^>]+>', ''))\r\n",
					"df = df.withColumn('task_data_visual_qualifying_task_2_complete',regexp_replace('task_data_visual_qualifying_task_2_complete', r'<[^>]+>', ''))\r\n",
					"df = df.withColumn('task_data_visual_qualifying_task_3_complete',regexp_replace('task_data_visual_qualifying_task_3_complete', r'<[^>]+>', ''))\r\n",
					"df = df.withColumn('task_data_visual_qualifying_task_4_complete',regexp_replace('task_data_visual_qualifying_task_4_complete', r'<[^>]+>', ''))\r\n",
					"df = df.withColumn('task_data_visual_qualifying10_complete',regexp_replace('task_data_visual_qualifying10_complete', r'<[^>]+>', ''))\r\n",
					"df = df.withColumn('task_data_visual_qualifying11_complete',regexp_replace('task_data_visual_qualifying11_complete', r'<[^>]+>', ''))\r\n",
					"df = df.withColumn('task_data_visual_qualifying12_complete',regexp_replace('task_data_visual_qualifying12_complete', r'<[^>]+>', ''))\r\n",
					"df = df.withColumn('task_data_visual_qualifying13_complete',regexp_replace('task_data_visual_qualifying13_complete', r'<[^>]+>', ''))\r\n",
					"df = df.withColumn('task_data_visual_qualifying14_complete',regexp_replace('task_data_visual_qualifying14_complete', r'<[^>]+>', ''))\r\n",
					"df = df.withColumn('task_data_visual_qualifying15_complete',regexp_replace('task_data_visual_qualifying15_complete', r'<[^>]+>', ''))\r\n",
					"df = df.withColumn('task_data_visual_qualifying16_complete',regexp_replace('task_data_visual_qualifying16_complete', r'<[^>]+>', ''))\r\n",
					"df = df.withColumn('task_data_visual_qualifying17_complete',regexp_replace('task_data_visual_qualifying17_complete', r'<[^>]+>', ''))\r\n",
					"df = df.withColumn('task_data_visual_qualifying18_complete',regexp_replace('task_data_visual_qualifying18_complete', r'<[^>]+>', ''))\r\n",
					"df = df.withColumn('task_data_auditory_qualifying10_complete',regexp_replace('task_data_auditory_qualifying10_complete', r'<[^>]+>', ''))\r\n",
					"df = df.withColumn('task_data_auditory_qualifying11_complete',regexp_replace('task_data_auditory_qualifying11_complete', r'<[^>]+>', ''))\r\n",
					"df = df.withColumn('task_data_auditory_qualifying14_complete',regexp_replace('task_data_auditory_qualifying14_complete', r'<[^>]+>', ''))\r\n",
					"df = df.withColumn('task_data_auditory_qualifying15_complete',regexp_replace('task_data_auditory_qualifying15_complete', r'<[^>]+>', ''))\r\n",
					"df = df.withColumn('task_data_auditory_qualifying16_complete',regexp_replace('task_data_auditory_qualifying16_complete', r'<[^>]+>', ''))\r\n",
					"df = df.withColumn('task_data_auditory_qualifying17_complete',regexp_replace('task_data_auditory_qualifying17_complete', r'<[^>]+>', ''))\r\n",
					"df = df.withColumn('task_data_auditory_qualifying18_complete',regexp_replace('task_data_auditory_qualifying18_complete', r'<[^>]+>', ''))\r\n",
					"df = df.withColumn('task_data_auditory_qualifying19_complete',regexp_replace('task_data_auditory_qualifying19_complete', r'<[^>]+>', ''))\r\n",
					"df = df.withColumn('task_data_yanny_laurel_control_complete',regexp_replace('task_data_yanny_laurel_control_complete', r'<[^>]+>', ''))\r\n",
					"\r\n",
					"df_pandas = df.toPandas()"
				],
				"attachments": null,
				"execution_count": 14
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import numpy as np\r\n",
					"    \r\n",
					"def find_in_cellstr(cellstr_array = None,expression = None,varargin = None): \r\n",
					"    # Find string (expression) in a cell array of strings (cellstr_array). Two\r\n",
					"# flags may also be included.  The first corresponds to returning a logical\r\n",
					"# array of those items you're searching for within the original cell array.\r\n",
					"# The second corresponds to whether or not you wish to find an exact match.\r\n",
					"    \r\n",
					"    # Developed by Al Powers, 2012\r\n",
					"    \r\n",
					"    if varargin.shape[2-1] > 0:\r\n",
					"        out = not cellfun('isempty',cellfun(lambda x = None: x == 1,regexp(cellstr_array,expression),'UniformOutput',False)) \r\n",
					"    else:\r\n",
					"        out = cellstr_array(not cellfun('isempty',cellfun(lambda x = None: x == 1,regexp(cellstr_array,expression),'UniformOutput',False)) )\r\n",
					"    \r\n",
					"    # Use a second flag if you only want exact matches.\r\n",
					"    if varargin.shape[2-1] > 1:\r\n",
					"        if varargin[1,1] == 0:\r\n",
					"            out = not cellfun('isempty',cellfun(lambda x = None: x == 1,regexp(cellstr_array,np.array(['^',expression,'$'])),'UniformOutput',False)) \r\n",
					"        else:\r\n",
					"            out = cellstr_array(not cellfun('isempty',cellfun(lambda x = None: x == 1,regexp(cellstr_array,np.array(['^',expression,'$'])),'UniformOutput',False)) )\r\n",
					"    \r\n",
					"    return out        \r\n",
					"      \r\n",
					"\r\n",
					"    "
				],
				"attachments": null,
				"execution_count": 15
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"import numpy as np\r\n",
					"import matplotlib.pyplot as plt\r\n",
					"    \r\n",
					"def cope_payornot(varargin = None): \r\n",
					"    # cope_payornot - Does consistency and task performance quality checks for\r\n",
					"# data gathered for the COPE study. This is meant to analyze data from\r\n",
					"# participants who have completed the full main module--Survey2 and Tasks.\r\n",
					"    \r\n",
					"    # OUT:\r\n",
					"# summary - structure with performance data on each of the tasks and\r\n",
					"# phenomonology\r\n",
					"    \r\n",
					"    ## Get file containing data.\r\n",
					"    if len(varargin) == 1:\r\n",
					"        cell = varargin[1,1]\r\n",
					"    else:\r\n",
					"        if len(varargin) == 0:\r\n",
					"            file,path = uigetfile('*')\r\n",
					"            __,__,cell = xlsread(fullfile(path,file))\r\n",
					"    \r\n",
					"    ## Config.\r\n",
					"    plot_yesno = 1\r\n",
					"    \r\n",
					"    ## Identify exclusions.\r\n",
					"    \r\n",
					"    # Exclude if have already been reviewed or included.\r\n",
					"    \r\n",
					"    task_already_reviewed = cell2mat(cell(np.arange(2,end()+1),(find_in_cellstr(cell(1,:),'task_quality_check',0,1))))\r\n",
					"    task_already_included = cell2mat(cell(np.arange(2,end()+1),(find_in_cellstr(cell(1,:),'task_quality_check2',0,1))))\r\n",
					"    consistency_already_reviewed = cell2mat(cell(np.arange(2,end()+1),(find_in_cellstr(cell(1,:),'consistency_quality_check',0,1))))\r\n",
					"    consistency_already_included = cell2mat(cell(np.arange(2,end()+1),(find_in_cellstr(cell(1,:),'consistency_quality_check2',0,1))))\r\n",
					"    incomplete_visual = cellfun(isnumeric,cell(np.arange(2,end()+1),find_in_cellstr(cell(1,:),'task_data_visual',0,0)))\r\n",
					"    incomplete_auditory = cellfun(isnumeric,cell(np.arange(2,end()+1),find_in_cellstr(cell(1,:),'task_data_auditory',0,0)))\r\n",
					"    incomplete_ylct = cellfun(isnumeric,cell(np.arange(2,end()+1),find_in_cellstr(cell(1,:),'task_data_yanny_laurel_control',0,0)))\r\n",
					"    incomplete_dct = cellfun(isnumeric,cell(np.arange(2,end()+1),find_in_cellstr(cell(1,:),'task_data_dots_control',0,0)))\r\n",
					"    tasks_incomplete = np.array([[False],[nansum(np.array([incomplete_visual,incomplete_auditory,incomplete_ylct,incomplete_dct]),2) > 0]])\r\n",
					"    cell_tasks_complete = cell(not tasks_incomplete ,:)\r\n",
					"    # Some cells mistakenly have HTML in them (not data).\r\n",
					"    false_completes_all = np.sum(np.array([find_in_cellstr(cell_tasks_complete(:,find_in_cellstr(cell_tasks_complete(1,:),'task_data_auditory',0,0)),'<font',1),find_in_cellstr(cell_tasks_complete(:,find_in_cellstr(cell_tasks_complete(1,:),'task_data_visual',0,0)),'<font',1),find_in_cellstr(cell_tasks_complete(:,find_in_cellstr(cell_tasks_complete(1,:),'task_data_yanny_laurel_control',0,0)),'<font',1),find_in_cellstr(cell_tasks_complete(:,find_in_cellstr(cell_tasks_complete(1,:),'task_data_dots_control',0,0)),'<font',1)]), 2-1) > 0\r\n",
					"    cell_tasks_complete = cell_tasks_complete(not false_completes_all )\r\n",
					"    all_exclusions = np.array([[False],[nansum(np.array([not np.isnan(task_already_included) ,not np.isnan(consistency_already_included) ,incomplete_visual,incomplete_auditory,incomplete_ylct,incomplete_dct]),2) > 0]])\r\n",
					"    \r\n",
					"    cell_in = cell(not all_exclusions ,:)\r\n",
					"    # Some cells mistakenly have HTML in them (not data).\r\n",
					"    false_completes_in = vertcat(0,np.sum(np.array([find_in_cellstr(cell_in(np.arange(2,end()+1),find_in_cellstr(cell_in(1,:),'task_data_auditory',0,0)),'<font',1),find_in_cellstr(cell_in(np.arange(2,end()+1),find_in_cellstr(cell_in(1,:),'task_data_visual',0,0)),'<font',1),find_in_cellstr(cell_in(np.arange(2,end()+1),find_in_cellstr(cell_in(1,:),'task_data_yanny_laurel_control',0,0)),'<font',1),find_in_cellstr(cell_in(np.arange(2,end()+1),find_in_cellstr(cell_in(1,:),'task_data_dots_control',0,0)),'<font',1)]), 2-1) > 0)\r\n",
					"    cell_in = cell_in(not false_completes_in ,:)\r\n",
					"    # Some cells mistakenly have HTML in them (not data).\r\n",
					"#cell_in_false_completes = sum([find_in_cellstr(cell_in(:,find_in_cellstr(cell_in(1,:),'task_data_auditory',0,0)),'<font',1) find_in_cellstr(cell_in(:,find_in_cellstr(cell_in(1,:),'task_data_visual',0,0)),'<font',1) find_in_cellstr(cell_in(:,find_in_cellstr(cell_in(1,:),'task_data_yanny_laurel_control',0,0)),'<font',1) find_in_cellstr(cell_in(:,find_in_cellstr(cell_in(1,:),'task_data_dots_control',0,0)),'<font',1)],2)>0;\r\n",
					"    \r\n",
					"    #cell_in = cell_in(~cell_in_false_completes,:);\r\n",
					"    \r\n",
					"    # If there is anyone left to analyze, do so.\r\n",
					"    \r\n",
					"    if cell_in.shape[1-1] > 1:\r\n",
					"        ## Check for repeated participation.\r\n",
					"        ip_repeat_flags = ip_repeat_check(cell_in)\r\n",
					"        ## Check phenomenological consistency.\r\n",
					"        phenom_summary = custom_cope_phenom_consistency_check(cell_in)\r\n",
					"        ## Check task performance.\r\n",
					"        task_summary = custom_task_data_qa(cell_in)\r\n",
					"        ## Create summary\r\n",
					"        summary.tasks = task_summary\r\n",
					"        summary.phenom = phenom_summary\r\n",
					"        summary.repeated_ip_record_ids = ip_repeat_flags\r\n",
					"        ## Plot\r\n",
					"        if plot_yesno == 1:\r\n",
					"            record_id = cell2mat(summary.tasks.raw(:,1))\r\n",
					"            # Flags:\r\n",
					"            flags = np.array([np.array(['MFAST Reported vs Observed Flag','MFAST Extreme Symptoms Flag','MFAST Rare Combinations Flag','MFAST Unusual Course Flag','MFAST Clin Flag','MFAST Non-Clin Flag','cbSASH Malingering Flag','cbSASH Consistent Items Flag','cbSASH Inconsistent Items Flag']),summary.tasks.recs.chart(1,np.arange(2,end()+1))])\r\n",
					"            for subject in np.arange(1,record_id.shape[1-1]+1).reshape(-1):\r\n",
					"                flag_values[subject,np.arange[1,6+1]] = double(np.array([summary.phenom[subject,2].mfast.reported_vs_observed_flag,summary.phenom[subject,2].mfast.extreme_symptoms_flag,summary.phenom[subject,2].mfast.rare_combinations_flag,summary.phenom[subject,2].mfast.unusual_symptom_course_flag,summary.phenom[subject,2].mfast.clin_flag,summary.phenom[subject,2].mfast.nonclin_flag]))\r\n",
					"                if isfield(summary.phenom[subject,2],'cbsash'):\r\n",
					"                    flag_values[subject,np.arange[7,9+1]] = double(np.array([summary.phenom[subject,2].cbsash.malingering_flag,summary.phenom[subject,2].cbsash.consistent_responses_correct_flag,summary.phenom[subject,2].cbsash.inconsistent_responses_correct_flag]))\r\n",
					"                else:\r\n",
					"                    flag_values[subject,np.arange[7,9+1]] = NaN\r\n",
					"                subject_chart = np.abs(cell2mat(summary.tasks.recs.chart(np.array([[False],[cell2mat(summary.tasks.recs.chart(np.arange(2,end()+1),1)) == record_id(subject,1)]]),np.arange(2,end()+1))) - 1)\r\n",
					"                flag_values[subject,np.arange[10,[10 + [summary.tasks.recs.chart.shape[2-1] - 2]]+1]] = subject_chart\r\n",
					"            plt.figure('Color',np.array([1,1,1]))\r\n",
					"            map = np.array([np.transpose((np.arange(0,1+0.01,0.01))),np.transpose((np.arange(1,0+- 0.01,- 0.01))),np.zeros((101,1))])\r\n",
					"            colormap(map)\r\n",
					"            h = imagesc(flag_values)\r\n",
					"            # Set nan values to transparent:\r\n",
					"            set(h,'alphadata',not np.isnan(flag_values) )\r\n",
					"            #     # Make the background black:\r\n",
					"#     set(gca,'color','black')\r\n",
					"            set(gca,'YTick',np.arange(1,record_id.shape[1-1]+1),'YTickLabel',cellstr(num2str(record_id)),'XTick',np.arange(1,flags.shape[2-1]+1),'XTickLabel',flags,'XAxisLocation','top')\r\n",
					"            plt.ylabel('Record ID')\r\n",
					"            xtickangle(30)\r\n",
					"            plt.title('Overall Performance')\r\n",
					"    else:\r\n",
					"        print('**************************')\r\n",
					"        print('****** No New Data *******')\r\n",
					"        print('**************************')\r\n",
					"    \r\n",
					"    return summary\r\n",
					"    \r\n",
					"    \r\n",
					"def custom_task_data_qa(varargin = None): \r\n",
					"    # task_data_qa - Does quality checks on data coming from CH tasks performed\r\n",
					"# online.\r\n",
					"    \r\n",
					"    # IN:\r\n",
					"# cell - cell array of people who have been enrolled in the study. These\r\n",
					"# do not have to be people who have completed the task or all the tasks.\r\n",
					"# People who have not yet completed all tasks are excluded from this\r\n",
					"# analysis.\r\n",
					"    \r\n",
					"    # OUT:\r\n",
					"# data - structure with performance data on each of the tasks, including\r\n",
					"# measures of randomness response and appropriateness of response given the\r\n",
					"# task structure.\r\n",
					"    \r\n",
					"    ## Get file if needed.\r\n",
					"    if len(varargin) == 1:\r\n",
					"        cell = varargin[1,1]\r\n",
					"    else:\r\n",
					"        if len(varargin) == 0:\r\n",
					"            file,path = uigetfile('*')\r\n",
					"            __,__,cell = xlsread(fullfile(path,file))\r\n",
					"    \r\n",
					"    ## Config\r\n",
					"    plot_yesno = 1\r\n",
					"    \r\n",
					"    tolerance = 1\r\n",
					"    \r\n",
					"    ## Identify exclusions.\r\n",
					"    \r\n",
					"    # Exclude if have already been included.\r\n",
					"    if sum(find_in_cellstr(cell(1,:),'task_quality_check',1)) > 0:\r\n",
					"        already_included = cell2mat(cell(np.arange(2,end()+1),(find_in_cellstr(cell(1,:),'task_quality_check2',0,1))))\r\n",
					"        all_exclusions = np.array([[False],[not np.isnan(already_included) ]])\r\n",
					"    else:\r\n",
					"        all_exclusions = False(cell.shape[1-1],1)\r\n",
					"    \r\n",
					"    cell_in = cell(not all_exclusions ,:)\r\n",
					"    ## Identify relevant variables in subjects to be analyzed.\r\n",
					"    \r\n",
					"    record_id = cell2mat(cell_in(np.arange(2,end()+1),(find_in_cellstr(cell_in(1,:),'record_id',0,1))))\r\n",
					"    task_names_main = np.array(['task_data_auditory','task_data_visual','task_data_yanny_laurel_control','task_data_dots_control'])\r\n",
					"    task_names_redo = np.array(['task_data_auditory_redo','task_data_visual_redo','task_data_yanny_laurel_control_redo','task_data_dots_control_redo'])\r\n",
					"    for i in np.arange(1,task_names_main.shape[2-1]+1).reshape(-1):\r\n",
					"        main_tasks[:,i] = cell_in(1,find_in_cellstr_new(cell_in(1,:),cell2mat(task_names_main(i)),1,1))\r\n",
					"        task_data[:,i] = cell_in(np.arange(2,end()+1),find_in_cellstr_new(cell_in(1,:),cell2mat(task_names_main(i)),1,1))\r\n",
					"    \r\n",
					"    for i in np.arange(1,task_names_redo.shape[2-1]+1).reshape(-1):\r\n",
					"        redos[:,i] = cell_in(1,find_in_cellstr_new(cell_in(1,:),cell2mat(task_names_redo(i)),1,1))\r\n",
					"        redo_data[:,i] = cell_in(np.arange(2,end()+1),find_in_cellstr_new(cell_in(1,:),cell2mat(task_names_redo(i)),1,1))\r\n",
					"    \r\n",
					"    \r\n",
					"    \r\n",
					"    # main_tasks = cell_in(1,(find_in_cellstr(cell_in(1,:),'task_data',1) & ~find_in_cellstr(cell_in(1,:),'complete',1) & ~find_in_cellstr(cell_in(1,:),'qualifying',1) ...\r\n",
					"#     & ~find_in_cellstr(cell_in(1,:),'redo',1) & ~find_in_cellstr(cell_in(1,:),'6m',1) & ~find_in_cellstr(cell_in(1,:),'ling',1)...\r\n",
					"#     & ~find_in_cellstr(cell_in(1,:),'ptsd',1)& ~find_in_cellstr(cell_in(1,:),'ed4db0',1)& ~find_in_cellstr(cell_in(1,:),'c237dc',1)...\r\n",
					"#     & ~find_in_cellstr(cell_in(1,:),'fu',1) & ~find_in_cellstr(cell_in(1,:),'short_t',1) & ~find_in_cellstr(cell_in(1,:),'2ifc',1) ...\r\n",
					"#     & (find_in_cellstr(cell_in(1,:),'auditory',1) | find_in_cellstr(cell_in(1,:),'visual',1) | find_in_cellstr(cell_in(1,:),'yanny',1) ...\r\n",
					"#     | (find_in_cellstr(cell_in(1,:),'dots',1)))));\r\n",
					"    \r\n",
					"    # task_data = cell_in(2:end,(find_in_cellstr(cell_in(1,:),'task_data',1) & ~find_in_cellstr(cell_in(1,:),'complete',1) & ~find_in_cellstr(cell_in(1,:),'qualifying',1) ...\r\n",
					"#     & ~find_in_cellstr(cell_in(1,:),'redo',1) & ~find_in_cellstr(cell_in(1,:),'6m',1) & ~find_in_cellstr(cell_in(1,:),'ling',1)...\r\n",
					"#     & ~find_in_cellstr(cell_in(1,:),'ptsd',1)& ~find_in_cellstr(cell_in(1,:),'ed4db0',1)& ~find_in_cellstr(cell_in(1,:),'c237dc',1)...\r\n",
					"#     & ~find_in_cellstr(cell_in(1,:),'fu',1) & ~find_in_cellstr(cell_in(1,:),'short_t',1) & ~find_in_cellstr(cell_in(1,:),'2ifc',1) ...\r\n",
					"#     & (find_in_cellstr(cell_in(1,:),'auditory',1) | find_in_cellstr(cell_in(1,:),'visual',1) | find_in_cellstr(cell_in(1,:),'yanny',1) ...\r\n",
					"#     | (find_in_cellstr(cell_in(1,:),'dots',1)))));\r\n",
					"    \r\n",
					"    # redos = cell_in(1,(find_in_cellstr(cell_in(1,:),'task_data',1) & ~find_in_cellstr(cell_in(1,:),'complete',1) & ~find_in_cellstr(cell_in(1,:),'qualifying',1) ...\r\n",
					"#     & find_in_cellstr(cell_in(1,:),'redo',1) & ~find_in_cellstr(cell_in(1,:),'6m',1) & ~find_in_cellstr(cell_in(1,:),'ling',1) ...\r\n",
					"#     & ~find_in_cellstr(cell_in(1,:),'ptsd',1)& ~find_in_cellstr(cell_in(1,:),'ed4db0',1)& ~find_in_cellstr(cell_in(1,:),'c237dc',1)...\r\n",
					"#     & ~find_in_cellstr(cell_in(1,:),'fu',1) & ~find_in_cellstr(cell_in(1,:),'short_t',1) & ~find_in_cellstr(cell_in(1,:),'2ifc',1) ...\r\n",
					"#     & (find_in_cellstr(cell_in(1,:),'auditory',1) | find_in_cellstr(cell_in(1,:),'visual',1) | find_in_cellstr(cell_in(1,:),'yanny',1) ...\r\n",
					"#     | (find_in_cellstr(cell_in(1,:),'dots',1)))));\r\n",
					"    \r\n",
					"    # redo_data = cell_in(2:end,(find_in_cellstr(cell_in(1,:),'task_data',1) & ~find_in_cellstr(cell_in(1,:),'complete',1) & ~find_in_cellstr(cell_in(1,:),'qualifying',1) ...\r\n",
					"#     & find_in_cellstr(cell_in(1,:),'redo',1) & ~find_in_cellstr(cell_in(1,:),'6m',1) & ~find_in_cellstr(cell_in(1,:),'ling',1) ...\r\n",
					"#     & ~find_in_cellstr(cell_in(1,:),'ptsd',1)& ~find_in_cellstr(cell_in(1,:),'ed4db0',1)& ~find_in_cellstr(cell_in(1,:),'c237dc',1)...\r\n",
					"#     & ~find_in_cellstr(cell_in(1,:),'fu',1) & ~find_in_cellstr(cell_in(1,:),'short_t',1) & ~find_in_cellstr(cell_in(1,:),'2ifc',1) ...\r\n",
					"#     & (find_in_cellstr(cell_in(1,:),'auditory',1) | find_in_cellstr(cell_in(1,:),'visual',1) | find_in_cellstr(cell_in(1,:),'yanny',1) ...\r\n",
					"#     | (find_in_cellstr(cell_in(1,:),'dots',1)))));\r\n",
					"    \r\n",
					"    complete_redo_tasks = redos(1,np.sum(cellfun(isstr,redo_data), 1-1) > 0)\r\n",
					"    complete_redo_task_data = redo_data(np.sum(cellfun(isstr,redo_data), 2-1) > 0,np.sum(cellfun(isstr,redo_data), 1-1) > 0)\r\n",
					"    # Get rid of aberrant content (error in filling data w/ font color html.\r\n",
					"    for i in np.arange(1,task_data.shape[1-1]+1).reshape(-1):\r\n",
					"        for ii in np.arange(1,task_data.shape[2-1]+1).reshape(-1):\r\n",
					"            if str(task_data[i,ii]) == str('<font color=\"red\">Incomplete</font>'):\r\n",
					"                task_data[i,ii] = NaN\r\n",
					"            else:\r\n",
					"                if np.isnan(task_data[i,ii]):\r\n",
					"                    task_data[i,ii] = NaN\r\n",
					"                else:\r\n",
					"                    if len(task_data[i,ii])==0:\r\n",
					"                        task_data[i,ii] = NaN\r\n",
					"    \r\n",
					"    subs_w_full_data = np.sum(cellfun(isstr,task_data), 2-1) == main_tasks.shape[2-1]\r\n",
					"    tasks = np.array([main_tasks,complete_redo_tasks])\r\n",
					"    record_id_full_data = record_id(subs_w_full_data,1)\r\n",
					"    task_data_full_data = task_data(subs_w_full_data,:)\r\n",
					"    ## Run analysis on subjects with full data.\r\n",
					"    task_output = redcap_reformat(task_data_full_data)\r\n",
					"    ## Run analysis on subjects who have had to re-do tasks.\r\n",
					"    redo_output = redcap_reformat(redo_data)\r\n",
					"    ## Combine regular output with redo output for any tasks needing to be reported.\r\n",
					"    \r\n",
					"    if (task_output.shape == redo_output.shape):\r\n",
					"        output = np.array([task_output,redo_output])\r\n",
					"    else:\r\n",
					"        output = np.array([task_output])\r\n",
					"        output_redo = np.array([redo_output])\r\n",
					"    \r\n",
					"    ## Create an array of quality measures (and whether they meet certain benchmarks) for each task.\r\n",
					"    \r\n",
					"    # Names of measures:\r\n",
					"# 1) first_15:  percentage of \"yes\" responses on first 15 trials of\r\n",
					"# train_test.\r\n",
					"# 2) delta_blocks: decreasing rate of \"yes\" response over blocks.\r\n",
					"# 3) delta_cond: decreasing rate of \"yes\" response over conditions (75#-0#)\r\n",
					"# 4) randomness: statistical randomness of sequence of responses.\r\n",
					"    \r\n",
					"    test_names = np.array(['Percent \"Yes\" First 15 Trials','Change in \"Yes\" Over Conditions'])\r\n",
					"    empties = np.zeros((task_data_full_data.shape[1-1],tasks.shape[2-1]))\r\n",
					"    for sub in np.arange(1,task_data_full_data.shape[1-1]+1).reshape(-1):\r\n",
					"        # First cell is the name of the participant\r\n",
					"        results.raw[sub,1] = record_id_full_data(sub,1)\r\n",
					"        results.flags[sub,1] = record_id_full_data(sub,1)\r\n",
					"        for task in np.arange(1,tasks.shape[2-1]+1).reshape(-1):\r\n",
					"            if find_in_cellstr(tasks(1,task),'task_data_visual',0,1):\r\n",
					"                task_type = 'vch'\r\n",
					"                col = 1\r\n",
					"            else:\r\n",
					"                if find_in_cellstr(tasks(1,task),'task_data_auditory',0,1):\r\n",
					"                    task_type = 'ach'\r\n",
					"                    col = 1\r\n",
					"                else:\r\n",
					"                    if find_in_cellstr(tasks(1,task),'task_data_yanny_laurel_control',0,1):\r\n",
					"                        task_type = 'ylct'\r\n",
					"                        col = 1\r\n",
					"                    else:\r\n",
					"                        if find_in_cellstr(tasks(1,task),'task_data_dots_control',0,1):\r\n",
					"                            task_type = 'dct'\r\n",
					"                            col = 1\r\n",
					"                        else:\r\n",
					"                            if find_in_cellstr(tasks(1,task),'task_data_visual_redo',0,1):\r\n",
					"                                task_type = 'vch'\r\n",
					"                                col = 2\r\n",
					"                            else:\r\n",
					"                                if find_in_cellstr(tasks(1,task),'task_data_auditory_redo',0,1):\r\n",
					"                                    task_type = 'ach'\r\n",
					"                                    col = 2\r\n",
					"                                else:\r\n",
					"                                    if find_in_cellstr(tasks(1,task),'task_data_yanny_laurel_control_redo',0,1):\r\n",
					"                                        task_type = 'ylct'\r\n",
					"                                        col = 2\r\n",
					"                                    else:\r\n",
					"                                        if find_in_cellstr(tasks(1,task),'task_data_dots_control_redo',0,1):\r\n",
					"                                            task_type = 'dct'\r\n",
					"                                            col = 2\r\n",
					"                                        else:\r\n",
					"                                            if find_in_cellstr(tasks(1,task),'task_data_auditory_short_b',0,1):\r\n",
					"                                                task_type = 'ach'\r\n",
					"                                                col = 2\r\n",
					"                                            else:\r\n",
					"                                                if find_in_cellstr(tasks(1,task),'task_data_auditory_short_t',0,1):\r\n",
					"                                                    task_type = 'ach'\r\n",
					"                                                    col = 2\r\n",
					"                                                else:\r\n",
					"                                                    task_type = ''\r\n",
					"            if str(task_type) == str('ach') or str(task_type) == str('vch'):\r\n",
					"                if isfield(output[sub,col],task_type):\r\n",
					"                    # Go through the tests.\r\n",
					"                    response_data = eval(np.array(['output{sub,col}.',task_type,'{1,1}.summary.detection.all;']))\r\n",
					"                    percent_data = eval(np.array(['output{sub,col}.',task_type,'{1,1}.summary.detection.percent_responses']))\r\n",
					"                    block_mod = fitlm((np.arange(1,(percent_data.shape[2-1] - 2)+1)),percent_data(6,np.arange(1,end() - 2+1)))\r\n",
					"                    cond_mod = fitlm((np.arange(25,75+25,25)),percent_data(np.arange(2,4+1),end()))\r\n",
					"                    rand_h,rand_p,rand_stats = runstest(response_data)\r\n",
					"                    results.raw[sub,task + 1][1,1] = mean(response_data(np.arange(1,15+1),1))\r\n",
					"                    #results.raw{sub,task+1}(1,2) = table2array(block_mod.Coefficients(2,1));  # Fit coefficient. Should be negative.\r\n",
					"#results.raw{sub,task+1}(2,2) = table2array(block_mod.Coefficients(2,4));  # Fit P value.  In case this works better.\r\n",
					"                    results.raw[sub,task + 1][1,2] = table2array(cond_mod.Coefficients(2,1))\r\n",
					"                    results.raw[sub,task + 1][2,2] = table2array(cond_mod.Coefficients(2,4))\r\n",
					"                    #                 results.raw{sub,task+1}(1,4) = rand_p;                       # P value for randomness test.\r\n",
					"                    results.flags[sub,task + 1][1,1] = results.raw[sub,task + 1](1,1) >= 0.55\r\n",
					"                    #results.flags{sub,task+1}(1,2) = results.raw{sub,task+1}(1,2)<0; # If there's a negative slope over the course of the experiment.\r\n",
					"                    results.flags[sub,task + 1][1,2] = results.raw[sub,task + 1](1,2) > 0\r\n",
					"                    #                 results.flags{sub,task+1}(1,4) = rand_p<0.05;\r\n",
					"                    results.tasks = tasks\r\n",
					"                else:\r\n",
					"                    results.flags[sub,task + 1] = NaN\r\n",
					"                    empties[sub,task] = NaN\r\n",
					"            else:\r\n",
					"                if str(task_type) == str('ylct') or str(task_type) == str('dct'):\r\n",
					"                    #  Assuming actual reaction times should be higher than minimum\r\n",
					"#  reaction time to auditory detection (200ms):\r\n",
					"#  Green, David M., and R. Duncan Luce. \"Detection of auditory signals\r\n",
					"#  presented at random times: III.\" Perception & Psychophysics\r\n",
					"#  9.3 (1971): 257-268.\r\n",
					"                    if isfield(output[sub,col],task_type):\r\n",
					"                        rts = np.array([[eval(np.array(['vertcat(output{sub,col}.',task_type,'{1,1}.data{2,1}.block4.h2v(:).duration)']))],[eval(np.array(['vertcat(output{sub,col}.',task_type,'{1,1}.data{2,1}.block4.v2h(:).duration)']))],[eval(np.array(['vertcat(output{sub,col}.',task_type,'{1,1}.data{2,1}.block5.h2v(:).duration)']))],[eval(np.array(['vertcat(output{sub,col}.',task_type,'{1,1}.data{2,1}.block5.v2h(:).duration)']))]])\r\n",
					"                        results.raw[sub,task + 1][1,1] = mean(rts)\r\n",
					"                        results.raw[sub,task + 1][1,2] = sum(rts < 250)\r\n",
					"                        results.raw[sub,task + 1][1,3] = mean(rts < 250)\r\n",
					"                        results.flags[sub,task + 1][1,1] = mean(rts < 250) <= 0.1\r\n",
					"                    else:\r\n",
					"                        results.flags[sub,task + 1] = NaN\r\n",
					"                        empties[sub,task] = NaN\r\n",
					"    \r\n",
					"    ## Make final recommendations.\r\n",
					"    \r\n",
					"    ## Make final recommendations.\r\n",
					"    \r\n",
					"    for i in np.arange(1,tasks.shape[2-1]+1).reshape(-1):\r\n",
					"        tasks[1,i] = tasks[1,i](1,np.arange(11,end()+1))\r\n",
					"        tasks[1,i][double[tasks[1,i]] == 95] = ' '\r\n",
					"        tasks[1,i] = regexprep(tasks[1,i],'(\\<[a-z])','${upper($1)}')\r\n",
					"    \r\n",
					"    # Subject numbers down the side.\r\n",
					"    results.recs.chart[np.arange[2,task_data_full_data.shape[1-1] + 1+1],1] = results.flags(np.arange(1,end()+1),1)\r\n",
					"    # Which subjects passed which tasks?\r\n",
					"    results.recs.chart[np.arange[2,task_data_full_data.shape[1-1] + 1+1],np.arange[2,results.flags.shape[2-1]+1]] = num2cell(double(cellfun(mean,results.flags(:,np.arange(2,end()+1))) >= tolerance))\r\n",
					"    \r\n",
					"    # Task names across the top.\r\n",
					"    results.recs.chart[1,1] = np.array(['record_id'])\r\n",
					"    results.recs.chart[1,np.arange[2,end()+1]] = tasks\r\n",
					"    # Overall recs for validating performance:\r\n",
					"    chart[:,:,1] = double(cellfun(mean,results.flags(:,np.arange(2,end()+1))) >= tolerance)\r\n",
					"    chart[:,:,2] = empties\r\n",
					"    chart_final = np.sum(chart, 3-1)\r\n",
					"    \r\n",
					"    results.recs.chart[np.arange[2,end()+1],np.arange[2,end()+1]] = num2cell(chart_final)\r\n",
					"    results.recs.chart[1,end() + 1] = 'Overall'\r\n",
					"    overall = double((np.logical_and(np.logical_and(np.logical_and((cell2mat(results.recs.chart(np.arange(2,end()+1),2)) == 1),(cell2mat(results.recs.chart(np.arange(2,end()+1),3)) == 1)),(cell2mat(results.recs.chart(np.arange(2,end()+1),4)) == 1)),(cell2mat(results.recs.chart(np.arange(2,end()+1),5)) == 1))))\r\n",
					"    results.recs.chart[np.arange[2,end()+1],end()] = num2cell(overall)\r\n",
					"    results.recs.pay = record_id_full_data(cell2mat(results.recs.chart(np.arange(2,end()+1),end())) == 1,1)\r\n",
					"    results.recs.remediate = record_id_full_data(cell2mat(results.recs.chart(np.arange(2,end()+1),end())) < 1,1)\r\n",
					"    ## Plot\r\n",
					"    \r\n",
					"    if plot_yesno == 1:\r\n",
					"        plt.figure('Color',np.array([1,1,1]))\r\n",
					"        map = np.array([[1,0,0],[0,1,0]])\r\n",
					"        colormap(map)\r\n",
					"        h = imagesc(cell2mat(results.recs.chart(np.arange(2,end()+1),np.arange(2,end()+1))))\r\n",
					"        # Set nan values to transparent:\r\n",
					"        set(h,'alphadata',not np.isnan(cell2mat(results.recs.chart(np.arange(2,end()+1),np.arange(2,end()+1)))) )\r\n",
					"        set(gca,'YTick',np.arange(1,task_data.shape[1-1]+1),'YTickLabel',cellstr(num2str(record_id_full_data)),'XTick',np.arange(1,(results.recs.chart.shape[2-1] - 1)+1),'XTickLabel',results.recs.chart(1,np.arange(2,end()+1)),'XAxisLocation','top')\r\n",
					"        plt.ylabel('Record ID')\r\n",
					"        xtickangle(30)\r\n",
					"        plt.title('Task Performance')\r\n",
					"    \r\n",
					"    return results\r\n",
					"    \r\n",
					"    \r\n",
					"def custom_cope_phenom_consistency_check(varargin = None): \r\n",
					"    # cope_phenom_consistency_check - Checks for consistency of responses in\r\n",
					"# phenomenological data derived from Yale COPE Project.\r\n",
					"    \r\n",
					"    # IN:\r\n",
					"# cell, consisting of data already derived from REDCap records.\r\n",
					"    \r\n",
					"    # OUT:\r\n",
					"# consistency_results - structure with performance data on each of the tasks, including\r\n",
					"# measures of randomness response and appropriateness of response given the\r\n",
					"# task structure.\r\n",
					"    \r\n",
					"    ## Get file if needed.\r\n",
					"    if len(varargin) == 1:\r\n",
					"        cell = varargin[1,1]\r\n",
					"    else:\r\n",
					"        if len(varargin) == 0:\r\n",
					"            file,path = uigetfile('*')\r\n",
					"            __,__,cell = xlsread(fullfile(path,file))\r\n",
					"    \r\n",
					"    ## Config\r\n",
					"    \r\n",
					"    only_completions = 1\r\n",
					"    \r\n",
					"    plot_yesno = 0\r\n",
					"    \r\n",
					"    ## Identify exclusions.\r\n",
					"    \r\n",
					"    # Exclude if have already been reviewed or included.\r\n",
					"# if sum(find_in_cellstr(cell(1,:),'consistency_quality_check',1))>0\r\n",
					"#     already_reviewed = cell2mat(cell(2:end,(find_in_cellstr(cell(1,:),'consistency_quality_check',0,1))));\r\n",
					"#     already_included = cell2mat(cell(2:end,(find_in_cellstr(cell(1,:),'consistency_quality_check2',0,1))));\r\n",
					"    \r\n",
					"    #     if only_completions == 1\r\n",
					"#         incomplete = isnan(cell2mat(cell(2:end,find_in_cellstr(cell(1,:),'timestamp4',0,0))));  # timestamp4 generated on completion of Survey2.\r\n",
					"#     end\r\n",
					"    \r\n",
					"    #     all_exclusions = [false; nansum([already_reviewed==1, already_included==1, incomplete],2)>0];  # First row = labels, so should be included in cell_in.\r\n",
					"# else\r\n",
					"    \r\n",
					"    #     if only_completions == 1\r\n",
					"#         incomplete = isnan(cell2mat(cell(2:end,find_in_cellstr(cell(1,:),'timestamp4',0,0))));  # timestamp4 generated on completion of Survey2.\r\n",
					"#         all_exclusions = [false; incomplete];\r\n",
					"#     else\r\n",
					"#         all_exclusions = false(size(cell,1),1);\r\n",
					"#     end\r\n",
					"# end\r\n",
					"    \r\n",
					"    # cell_in = cell(~all_exclusions,:);\r\n",
					"    \r\n",
					"    cell_in = cell\r\n",
					"    ## Create variables from all cell columns.\r\n",
					"    \r\n",
					"    for col in np.arange(1,cell.shape[2-1]+1).reshape(-1):\r\n",
					"        eval(np.array([cell_in[1,col],' = cell_in(2:end,col);']))\r\n",
					"        try:\r\n",
					"            if eval(np.array(['isnumeric(',cell_in[1,col],'{1,1})'])):\r\n",
					"                eval(np.array([cell_in[1,col],' = cell2mat(',cell_in[1,col],');']))\r\n",
					"        finally:\r\n",
					"            pass\r\n",
					"    \r\n",
					"    ## Test consistency across all measures.\r\n",
					"    \r\n",
					"    for subject in np.arange(1,record_id.shape[1-1]+1).reshape(-1):\r\n",
					"        # Load consistency key.\r\n",
					"        if not np.isnan(cb_sash1(subject,1)) :\r\n",
					"            scipy.io.loadmat('key.mat')\r\n",
					"        else:\r\n",
					"            scipy.io.loadmat('key_ah_negative.mat')\r\n",
					"        cons_struct = struct\r\n",
					"        consistent = np.array([])\r\n",
					"        incon_summary = np.array([])\r\n",
					"        for test_cond in np.arange(1,key.shape[1-1]+1).reshape(-1):\r\n",
					"            for cond_value_num in np.arange(1,key[test_cond,2].shape[1-1]+1).reshape(-1):\r\n",
					"                if eval(np.array([key[test_cond,1],'(subject,1)',key[test_cond,2][1,1],num2str(key[test_cond,3](cond_value_num,1))])):\r\n",
					"                    inconsistency_count = 0\r\n",
					"                    for other_conds in np.arange(1,key[test_cond,4].shape[2-1]+1).reshape(-1):\r\n",
					"                        consistent[test_cond,other_conds] = np.sum(eval(np.array([key[test_cond,4][1,other_conds],'(subject,1)',key[test_cond,5][cond_value_num,other_conds],'key{test_cond,6}{cond_value_num,other_conds}'])), 1-1)\r\n",
					"                        if consistent[test_cond,other_conds] == 0:\r\n",
					"                            inconsistency_count = inconsistency_count + 1\r\n",
					"                            if inconsistency_count == 1:\r\n",
					"                                # Name of first condition.\r\n",
					"                                incon_summary[test_cond,1][1,inconsistency_count] = key[test_cond,1]\r\n",
					"                                # Response to first condition.\r\n",
					"                                incon_summary[test_cond,1][2,inconsistency_count] = eval(np.array([key[test_cond,1],'(subject,1)']))\r\n",
					"                            # Name of test condition.\r\n",
					"                            incon_summary[test_cond,2][1,inconsistency_count] = key[test_cond,4][1,other_conds]\r\n",
					"                            # Actual response\r\n",
					"                            incon_summary[test_cond,2][2,inconsistency_count] = eval(np.array([key[test_cond,4][1,other_conds],'(subject,1)']))\r\n",
					"        # Make sure incon summary exists and is not empty.\r\n",
					"        if not len(incon_summary)==0 :\r\n",
					"            # Clean up summary of what was inconsistent.\r\n",
					"            cons_struct.across_scales.incon_summary = incon_summary(not cellfun(isempty,incon_summary(:,1)) ,:)\r\n",
					"            # Store data.\r\n",
					"            cons_struct.across_scales.test_matrix = consistent\r\n",
					"            cons_struct.across_scales.performance = mean(cell2mat(consistent(not cellfun(isempty,consistent) )))\r\n",
					"            cons_struct.across_scales.flag = cons_struct.across_scales.performance < 0.75\r\n",
					"        else:\r\n",
					"            cons_struct.across_scales.flag = 0\r\n",
					"        ## Establish performance on cbSASH.\r\n",
					"        if not np.isnan(cb_sash1(subject,1)) :\r\n",
					"            # Malingering.\r\n",
					"            cons_struct.cbsash.malingering_responses = np.array([[cb_sash142(subject,1)],[cb_sash9(subject,1)],[cb_sash10(subject,1)],[cb_sash19(subject,1)],[cb_sash20(subject,1)],[cb_sash29(subject,1)],[cb_sash35(subject,1)],[cb_sash39(subject,1)],[cb_sash40(subject,1)],[cb_sash66(subject,1)],[cb_sash68(subject,1)],[cb_sash74(subject,1)],[cb_sash76(subject,1)],[cb_sash80(subject,1)],[cb_sash81(subject,1)],[cb_sash82(subject,1)],[cb_sash83(subject,1)],[cb_sash98(subject,1)],[cb_sash103(subject,1)],[cb_sash104(subject,1)],[cb_sash108(subject,1)],[cb_sash111(subject,1)],[cb_sash112(subject,1)],[cb_sash120(subject,1)],[cb_sash127(subject,1)],[cb_sash130(subject,1)],[cb_sash154(subject,1)],[cb_sash34(subject,1)],[cb_sash51(subject,1)],[cb_sash53(subject,1)]]) == 1\r\n",
					"            cons_struct.cbsash.malingering_flag = np.sum(cons_struct.cbsash.malingering_responses, 1-1) > 7\r\n",
					"            cons_struct.cbsash.malingering_sum = np.sum(cons_struct.cbsash.malingering_responses, 1-1)\r\n",
					"            cons_struct.cbsash.malingering_mean = mean(cons_struct.cbsash.malingering_responses,1)\r\n",
					"            # Items that should be consistent.\r\n",
					"            cons_struct.cbsash.consistent_responses = np.array([[cb_sash2(subject,1),cb_sash156(subject,1)],[cb_sash11(subject,1),cb_sash139(subject,1)],[cb_sash12(subject,1),cb_sash140(subject,1)],[cb_sash15(subject,1),cb_sash121(subject,1)],[cb_sash16(subject,1),cb_sash116(subject,1)],[cb_sash3(subject,1),cb_sash77(subject,1)],[cb_sash95(subject,1),cb_sash144(subject,1)],[cb_sash38(subject,1),cb_sash132(subject,1)],[cb_sash101(subject,1),cb_sash146(subject,1)],[cb_sash49(subject,1),cb_sash138(subject,1)],[cb_sash5(subject,1),cb_sash131(subject,1)],[cb_sash13(subject,1),cb_sash65(subject,1)],[cb_sash56(subject,1),cb_sash129(subject,1)],[cb_sash96(subject,1),cb_sash150(subject,1)]])\r\n",
					"            cons_struct.cbsash.consistent_responses_correct = cons_struct.cbsash.consistent_responses(:,1) == cons_struct.cbsash.consistent_responses(:,2)\r\n",
					"            cons_struct.cbsash.consistent_responses_correct_sum = np.sum(cons_struct.cbsash.consistent_responses_correct, 1-1)\r\n",
					"            cons_struct.cbsash.consistent_responses_correct_mean = mean(cons_struct.cbsash.consistent_responses_correct,1)\r\n",
					"            cons_struct.cbsash.consistent_responses_correct_flag = cons_struct.cbsash.consistent_responses_correct_mean < 0.7\r\n",
					"            # Items that should be inconsistent.\r\n",
					"            cons_struct.cbsash.inconsistent_responses = np.array([[cb_sash18(subject,1),cb_sash87(subject,1)],[cb_sash121(subject,1),cb_sash79(subject,1)],[cb_sash44(subject,1),cb_sash134(subject,1)],[cb_sash141(subject,1),cb_sash45(subject,1)],[cb_sash48(subject,1),cb_sash142(subject,1)],[cb_sash78(subject,1),cb_sash143(subject,1)],[cb_sash37(subject,1),cb_sash136(subject,1)],[cb_sash60(subject,1),cb_sash123(subject,1)],[cb_sash99(subject,1),cb_sash151(subject,1)],[cb_sash128(subject,1),cb_sash14(subject,1)],[cb_sash8(subject,1),cb_sash157(subject,1)],[cb_sash59(subject,1),cb_sash178(subject,1)],[cb_sash148(subject,1),cb_sash43(subject,1)],[cb_sash69(subject,1),cb_sash133(subject,1)]])\r\n",
					"            cons_struct.cbsash.inconsistent_responses_correct = cons_struct.cbsash.inconsistent_responses(:,1) != cons_struct.cbsash.inconsistent_responses(:,2)\r\n",
					"            cons_struct.cbsash.inconsistent_responses_correct_sum = np.sum(cons_struct.cbsash.inconsistent_responses_correct, 1-1)\r\n",
					"            cons_struct.cbsash.inconsistent_responses_correct_mean = mean(cons_struct.cbsash.inconsistent_responses_correct,1)\r\n",
					"            cons_struct.cbsash.inconsistent_responses_correct_flag = cons_struct.cbsash.inconsistent_responses_correct_mean < 0.7\r\n",
					"        ## Establish performance on MFAST.\r\n",
					"        # Reported vs observed.\r\n",
					"        try:\r\n",
					"            cons_struct.mfast.reported_vs_observed_responses = np.array([[mfast1(subject,1),mfast1a(subject,1)],[mfast7(subject,1),mfast7b(subject,1)],[mfast11(subject,1),mfast11b(subject,1)]])\r\n",
					"            cons_struct.mfast.reported_vs_observed_incorrect = cons_struct.mfast.reported_vs_observed_responses(:,1) != cons_struct.mfast.reported_vs_observed_responses(:,2)\r\n",
					"        finally:\r\n",
					"            pass\r\n",
					"        cons_struct.mfast.reported_vs_observed_flag = np.sum(cons_struct.mfast.reported_vs_observed_incorrect, 1-1) >= 1\r\n",
					"        # Extreme Symptoms.\r\n",
					"        cons_struct.mfast.extreme_symptoms = np.array([[mfast2(subject,1)],[mfast5(subject,1)],[mfast8(subject,1)],[mfast10(subject,1)],[mfast13(subject,1)],[mfast15(subject,1)],[mfast19(subject,1)]])\r\n",
					"        cons_struct.mfast.extreme_symptoms_endorsed = cons_struct.mfast.extreme_symptoms > 0\r\n",
					"        cons_struct.mfast.extreme_symptoms_flag = np.sum(cons_struct.mfast.extreme_symptoms_endorsed, 1-1) >= 2\r\n",
					"        # Rare Combinations\r\n",
					"        cons_struct.mfast.rare_combinations = np.array([[mfast3(subject,1)],[mfast12(subject,1)],[mfast16(subject,1)],[mfast17(subject,1)],[mfast18(subject,1)],[mfast22(subject,1)],[mfast24(subject,1)]])\r\n",
					"        cons_struct.mfast.rare_combinations_endorsed = cons_struct.mfast.rare_combinations > 0\r\n",
					"        cons_struct.mfast.rare_combinations_flag = np.sum(cons_struct.mfast.rare_combinations_endorsed, 1-1) >= 2\r\n",
					"        # Unusual symptom course\r\n",
					"        cons_struct.mfast.unusual_symptom_course = np.array([[mfast4(subject,1)],[mfast6(subject,1)],[mfast9(subject,1)],[mfast20(subject,1)],[mfast21(subject,1)]])\r\n",
					"        cons_struct.mfast.unusual_symptom_course_endorsed = cons_struct.mfast.unusual_symptom_course > 0\r\n",
					"        cons_struct.mfast.unusual_symptom_course_flag = np.sum(cons_struct.mfast.unusual_symptom_course_endorsed, 1-1) >= 2\r\n",
					"        # Total scores.\r\n",
					"        cons_struct.mfast.total_score = np.sum(np.array([[cons_struct.mfast.reported_vs_observed_incorrect],[cons_struct.mfast.extreme_symptoms_endorsed],[cons_struct.mfast.rare_combinations_endorsed],[cons_struct.mfast.unusual_symptom_course_endorsed]]), 1-1)\r\n",
					"        cons_struct.mfast.clin_flag = cons_struct.mfast.total_score > 10\r\n",
					"        cons_struct.mfast.nonclin_flag = cons_struct.mfast.total_score > 6\r\n",
					"        ## Store data.\r\n",
					"        results[subject,1] = record_id(subject,1)\r\n",
					"        results[subject,2] = cons_struct\r\n",
					"    \r\n",
					"    ## Plot data.\r\n",
					"    \r\n",
					"    if plot_yesno == 1:\r\n",
					"        # Flags:\r\n",
					"        flags = np.array(['Across Scales Poor Performance Flag','MFAST Reported vs Observed Flag','MFAST Extreme Symptoms Flag','MFAST Rare Combinations Flag','MFAST Unusual Course Flag','MFAST Clin Flag','MFAST Non-Clin Flag','cbSASH Malingering Flag','cbSASH Consistent Items Flag','cbSASH Inconsistent Items Flag'])\r\n",
					"        for subject in np.arange(1,record_id.shape[1-1]+1).reshape(-1):\r\n",
					"            flag_values[subject,np.arange[1,7+1]] = double(np.array([results[subject,2].across_scales.flag,results[subject,2].mfast.reported_vs_observed_flag,results[subject,2].mfast.extreme_symptoms_flag,results[subject,2].mfast.rare_combinations_flag,results[subject,2].mfast.unusual_symptom_course_flag,results[subject,2].mfast.clin_flag,results[subject,2].mfast.nonclin_flag]))\r\n",
					"            if isfield(results[subject,2],'cbsash'):\r\n",
					"                flag_values[subject,np.arange[8,10+1]] = double(np.array([results[subject,2].cbsash.malingering_flag,results[subject,2].cbsash.consistent_responses_correct_flag,results[subject,2].cbsash.inconsistent_responses_correct_flag]))\r\n",
					"            else:\r\n",
					"                flag_values[subject,np.arange[8,10+1]] = NaN\r\n",
					"        plt.figure('Color',np.array([1,1,1]))\r\n",
					"        map = np.array([np.transpose((np.arange(0,1+0.01,0.01))),np.transpose((np.arange(1,0+- 0.01,- 0.01))),np.zeros((101,1))])\r\n",
					"        colormap(map)\r\n",
					"        h = imagesc(flag_values)\r\n",
					"        # Set nan values to transparent:\r\n",
					"        set(h,'alphadata',not np.isnan(flag_values) )\r\n",
					"        #     # Make the background black:\r\n",
					"#     set(gca,'color','black')\r\n",
					"        set(gca,'YTick',np.arange(1,record_id.shape[1-1]+1),'YTickLabel',cellstr(num2str(record_id)),'XTick',np.arange(1,flags.shape[2-1]+1),'XTickLabel',flags,'XAxisLocation','top')\r\n",
					"        plt.ylabel('Record ID')\r\n",
					"        xtickangle(30)\r\n",
					"        plt.title('Phenomenological Performance')\r\n",
					"    \r\n",
					"    return results\r\n",
					"    \r\n",
					"    \r\n",
					"def ip_repeat_check(cell = None): \r\n",
					"    qualifying_tasks = np.logical_and(find_in_cellstr(cell(1,:),'qualifying',1),not find_in_cellstr(cell(1,:),'complete',1) )\r\n",
					"    complete_qualifying = np.sum(not cellfun(isnumeric,cell(np.arange(2,end()+1),qualifying_tasks)) , 2-1) > 0\r\n",
					"    complete_qualifying_data = cell(np.array([[False],[complete_qualifying]]),qualifying_tasks)\r\n",
					"    record_id = cell2mat(cell(np.array([[False],[complete_qualifying]]),find_in_cellstr(cell(1,:),'record_id',0,1)))\r\n",
					"    for record in np.arange(1,record_id.shape[1-1]+1).reshape(-1):\r\n",
					"        # Convert to cellstr.\r\n",
					"        complete_qualifying_data[cellfun[isnumeric,complete_qualifying_data]] = np.array([''])\r\n",
					"        # Find relevant data.\r\n",
					"        real_data = find_in_cellstr(complete_qualifying_data(record,:),'H4s')\r\n",
					"        data[record,1] = redcap2struct(real_data[1,1])\r\n",
					"        if isfield(data[record,1],'ip'):\r\n",
					"            ip[record,1] = data[record,1].ip\r\n",
					"        else:\r\n",
					"            symbols = np.array([np.arange('a','z'+1),np.arange('A','Z'+1),np.arange('0','9'+1)])\r\n",
					"            MAX_ST_LENGTH = 50\r\n",
					"            stLength = randi(MAX_ST_LENGTH)\r\n",
					"            nums = randi(np.asarray(symbols).size,np.array([1,stLength]))\r\n",
					"            st = symbols(nums)\r\n",
					"            ip[record,1] = st\r\n",
					"    \r\n",
					"    __,i,__ = unique(ip,'first')\r\n",
					"    results = record_id(not_(ismember(np.arange(1,np.asarray(ip).size+1),i)),1)\r\n",
					"    return results\r\n",
					"    \r\n",
					"    return summary\r\n",
					"\r\n",
					""
				],
				"attachments": null,
				"execution_count": 16
			}
		]
	}
}