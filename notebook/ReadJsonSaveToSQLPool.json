{
	"name": "ReadJsonSaveToSQLPool",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "NotebookPool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "112g",
			"driverCores": 16,
			"executorMemory": "112g",
			"executorCores": 16,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "49764403-88b2-4bbb-af11-bd6006fa6ab6"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_spark",
				"display_name": "Synapse Spark"
			},
			"language_info": {
				"name": "scala"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/20e228e4-63c7-480a-a860-4b61e9623727/resourceGroups/EDU-US-DevPoc/providers/Microsoft.Synapse/workspaces/educsademo/bigDataPools/NotebookPool",
				"name": "NotebookPool",
				"type": "Spark",
				"endpoint": "https://educsademo.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/NotebookPool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 10,
				"cores": 16,
				"memory": 112,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\n",
					"from pyspark.sql.functions import explode, col\n",
					"spark.conf.set(\"spark.sql.execution.arrow.enabled\", \"true\")\n",
					"#Read the file from Blob Storage\n",
					"storage_account_name = \"eduusdevpoc\"\n",
					"storage_account_access_key = \"VK4S2Gps45KZEddTBEgf3LwVlLn+PN50Y0YaL21/QKzGLphCWKy/5MuTUiHWnSR6nwXEn94npMq2xyZbwGV0Qg==\"\n",
					"blob_container = \"jsonfiles\"\n",
					"file_name = \"jsonSample.json\"\n",
					"thePassword = token_library.getSecret(\"edu-csa-keyvault\", \"WelcomePassword\")\n",
					"\n",
					"spark.conf.set(\n",
					"  \"fs.azure.account.key.\"+storage_account_name+\".blob.core.windows.net\",\n",
					"  storage_account_access_key)\n",
					"\n",
					"blob_location = \"wasbs://\"+blob_container +\"@\" + storage_account_name + \".blob.core.windows.net/\"+file_name\n",
					"\n",
					"#Upload file into data frame\n",
					"df= spark.read.json(\"wasbs://\"+blob_container +\"@\" + storage_account_name + \".blob.core.windows.net/\", multiLine=True)\n",
					""
				],
				"attachments": null,
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\n",
					"df.show()"
				],
				"attachments": null,
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\n",
					"df.printSchema()"
				],
				"attachments": null,
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\n",
					"people = df.select(\"_id\",\"name\",\"about\",\"address\",\"age\",\"balance\",\"company\",\"email\",\"eyeColor\",\"favoriteFruit\")\n",
					"people.show()"
				],
				"attachments": null,
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\n",
					"from pyspark.sql.functions import explode, col\n",
					"spark.conf.set(\"spark.sql.execution.arrow.enabled\", \"true\")"
				],
				"attachments": null,
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\n",
					"#flatten friends\n",
					"friends_struct = df.select(explode(\"friends\").alias(\"friends\"))\n",
					"friends_struct.printSchema()"
				],
				"attachments": null,
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					},
					"diagram": {
						"activateDiagramType": 1,
						"chartConfig": {
							"category": "bar",
							"keys": [
								"name"
							],
							"values": [
								"id"
							],
							"yLabel": "id",
							"xLabel": "name",
							"aggregation": "SUM",
							"aggByBackend": false
						},
						"aggData": "{\"id\":{\"Abigail Garcia\":0,\"Aisha Sharp\":2,\"Alisha Hayes\":0,\"Ann Parrish\":2,\"Baker Silva\":1,\"Becker Byrd\":2,\"Bennett Day\":1,\"Brandi Hancock\":1,\"Brewer Knox\":1,\"Brock Cobb\":0,\"Camacho Cervantes\":0,\"Cara Fisher\":1,\"Carey Fowler\":2,\"Castro Perez\":2,\"Charmaine Gay\":0,\"Coleen Pennington\":0,\"Colleen Armstrong\":2,\"Cook Vance\":1,\"Daisy Pennington\":1,\"Dana Alston\":1,\"Daniel Malone\":1,\"Dena Bauer\":2,\"Effie Vaughn\":1,\"Eileen Kemp\":2,\"Elisa Blackwell\":0,\"Eloise Prince\":2,\"Erica Alexander\":0,\"Ernestine Wilder\":1,\"Evangeline Mclean\":0,\"Fischer Mckinney\":1,\"Foley Marshall\":1,\"Gentry Hicks\":2,\"Graham Wheeler\":0,\"Haley Mooney\":0,\"Hart Fletcher\":0,\"Hodge Deleon\":2,\"Hogan Oconnor\":1,\"Janna Reese\":2,\"Jeanette Neal\":2,\"Jody Cross\":1,\"Johnston Church\":1,\"June Baldwin\":0,\"Kerri Mckenzie\":2,\"Knox Hobbs\":0,\"Krista Beard\":0,\"Kristen Knapp\":1,\"Kristina Snider\":1,\"Lakisha Wells\":0,\"Lenora Craig\":1,\"Levy Mcbride\":0,\"Lillian Griffin\":0,\"Lorie Cannon\":0,\"Lyons Church\":1,\"Mallory Rowe\":2,\"Mariana Nunez\":0,\"Marina Mccoy\":1,\"Marina Morse\":2,\"Marlene Huber\":0,\"Mary Lara\":2,\"Mccarty Calhoun\":1,\"Mclaughlin Conner\":2,\"Medina Mcdowell\":2,\"Mollie Cardenas\":1,\"Monica Stephenson\":0,\"Muriel Salas\":0,\"Nelson Emerson\":0,\"Norman Ware\":1,\"Ola Hansen\":2,\"Patrice Park\":2,\"Pugh Daniels\":0,\"Reyna Hooper\":2,\"Reynolds Hartman\":0,\"Richards Wong\":2,\"Roy Rosa\":2,\"Sandra Simon\":2,\"Sheppard Contreras\":2,\"Stephens Whitfield\":0,\"Sutton Hess\":1,\"Tameka Murphy\":0,\"Tillman Glenn\":2,\"Tracey Kerr\":1,\"Tracey Wall\":1,\"Tricia Bentley\":2,\"Zelma Barron\":1}}",
						"isSummary": false,
						"previewData": {
							"filter": null
						},
						"isSql": false
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\n",
					"#extract the structure from the friends\n",
					"friends = friends_struct.select(\"friends.*\")\n",
					"display(friends)"
				],
				"attachments": null,
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\n",
					"print('Register the DataFrame as a SQL temporary view: source')\n",
					"people.createOrReplaceTempView('source')"
				],
				"attachments": null,
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"source": [
					"val peopleSQL = spark.sql(\"SELECT * FROM source\")\n",
					"peopleSQL.show(5,truncate = false)"
				],
				"attachments": null,
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"source": [
					"// Write the dataframe into your sql pool\n",
					"import org.apache.spark.sql.SqlAnalyticsConnector._\n",
					"import com.microsoft.spark.sqlanalytics.utils.Constants\n",
					"import com.microsoft.spark.sqlanalytics\n",
					"import org.apache.spark.sql.{DataFrameReader, DataFrameWriter, Row, SaveMode}\n",
					"import org.apache.spark.sql.SaveMode\n",
					"\n",
					"val sql_pool_name = \"sqlPool\" //fill in your sql pool name"
				],
				"attachments": null,
				"execution_count": 10
			},
			{
				"cell_type": "code",
				"source": [
					"//spark.sql(s\" DROP TABLE $sql_pool_name.Staging.People\")\n",
					"\n",
					"\n",
					"peopleSQL.write.mode(SaveMode.Append).sqlanalytics(s\"$sql_pool_name.Staging.People\", Constants.INTERNAL)"
				],
				"attachments": null,
				"execution_count": 11
			},
			{
				"cell_type": "code",
				"source": [
					"val dfpeople = spark.read.sqlanalytics(s\"$sql_pool_name.Staging.People\") \n",
					"dfpeople.show()\n",
					""
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"inputCollapsed": true
				},
				"source": [
					"\n",
					"peopleSQL.write.format(\"jdbc\").mode(SaveMode.Append).option(\"url\", \"jdbc:sqlserver://educsademo.sql.azuresynapse.net:1433\").option(\"driver\", \"com.microsoft.sqlserver.jdbc.SQLServerDriver\").option(\"database\",\"sqlPool\").option(\"dbtable\", \"NYC.People\").option(\"user\", \"sqladminuser@educsademo\").option(\"password\", thePassword).save()  \n",
					""
				],
				"attachments": null,
				"execution_count": 12
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "scala"
					},
					"collapsed": true
				},
				"source": [
					"%%spark\r\n",
					"// Save to SpakPool\r\n",
					"\r\n",
					"spark.sql(\"CREATE DATABASE IF NOT EXISTS default\")\r\n",
					"val df = spark.sql(\"SELECT * FROM source\") \r\n",
					"df.write.mode(\"overwrite\").saveAsTable(\"complex.meetdata\")"
				],
				"attachments": null,
				"execution_count": 13
			}
		]
	}
}